

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 09 23:16:46 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 18/08/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataCOMRAM
    80   001168                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _motor_num
    84   001168  0005               	dw	5
    85                           
    86                           ;initializer for _T
    87   00116A  001E               	dw	30
    88   000000                     _INTCON2bits	set	4081
    89   000000                     _LATB	set	3978
    90   000000                     _LATC	set	3979
    91   000000                     _TRISC	set	3988
    92   000000                     _TMR0L	set	4054
    93   000000                     _TMR0H	set	4055
    94   000000                     _T0CONbits	set	4053
    95   000000                     _INTCON3bits	set	4080
    96   000000                     _INTCONbits	set	4082
    97                           
    98                           	psect	nvCOMRAM
    99   000054                     __pnvCOMRAM:
   100                           	callstack 0
   101   000054                     _seed:
   102                           	callstack 0
   103   000054                     	ds	4
   104   000000                     _TRISCbits	set	3988
   105   000000                     _LATA	set	3977
   106   000000                     _T0CON	set	4053
   107   000000                     _TMR0IF	set	32658
   108   000000                     _LATAbits	set	3977
   109   000000                     _PIR1bits	set	3998
   110   000000                     _RCSTAbits	set	4011
   111   000000                     _TXSTAbits	set	4012
   112   000000                     _CCP2CONbits	set	4026
   113   000000                     _CCPR2L	set	4027
   114   000000                     _CCP1CONbits	set	4029
   115   000000                     _CCPR1L	set	4030
   116   000000                     _ADCON1	set	4033
   117   000000                     _T2CONbits	set	4042
   118   000000                     _OSCCON	set	4051
   119   000000                     _RCONbits	set	4048
   120   000000                     _PR2	set	4043
   121   000000                     _TRISAbits	set	3986
   122   000000                     _TRISBbits	set	3987
   123   000000                     _TXREG	set	4013
   124   000000                     _SPBRG	set	4015
   125   000000                     _BAUDCONbits	set	4024
   126                           
   127                           	psect	smallconst
   128   000600                     __psmallconst:
   129                           	callstack 0
   130   000600  00                 	db	0
   131   000601                     STR_1:
   132   000601  30                 	db	48	;'0'
   133   000602  31                 	db	49	;'1'
   134   000603  32                 	db	50	;'2'
   135   000604  33                 	db	51	;'3'
   136   000605  34                 	db	52	;'4'
   137   000606  35                 	db	53	;'5'
   138   000607  36                 	db	54	;'6'
   139   000608  37                 	db	55	;'7'
   140   000609  38                 	db	56	;'8'
   141   00060A  39                 	db	57	;'9'
   142   00060B  61                 	db	97	;'a'
   143   00060C  62                 	db	98	;'b'
   144   00060D  63                 	db	99	;'c'
   145   00060E  64                 	db	100	;'d'
   146   00060F  65                 	db	101	;'e'
   147   000610  66                 	db	102	;'f'
   148   000611  00                 	db	0
   149   000612                     STR_2:
   150   000612  53                 	db	83	;'S'
   151   000613  63                 	db	99	;'c'
   152   000614  6F                 	db	111	;'o'
   153   000615  72                 	db	114	;'r'
   154   000616  65                 	db	101	;'e'
   155   000617  20                 	db	32
   156   000618  3A                 	db	58	;':'
   157   000619  20                 	db	32
   158   00061A  00                 	db	0
   159   00061B  00                 	db	0	; dummy byte at the end
   160   000000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164   001074                     __pcinit:
   165                           	callstack 0
   166   001074                     start_initialization:
   167                           	callstack 0
   168   001074                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Initialize objects allocated to COMRAM (4 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173   001074  0E68               	movlw	low __pidataCOMRAM
   174   001076  6EF6               	movwf	tblptrl,c
   175   001078  0E11               	movlw	high __pidataCOMRAM
   176   00107A  6EF7               	movwf	tblptrh,c
   177   00107C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178   00107E  6EF8               	movwf	tblptru,c
   179   001080  EE00  F058         	lfsr	0,__pdataCOMRAM
   180   001084  EE10 F004          	lfsr	1,4
   181   001088                     copy_data0:
   182   001088  0009               	tblrd		*+
   183   00108A  CFF5 FFEE          	movff	tablat,postinc0
   184   00108E  50E5               	movf	postdec1,w,c
   185   001090  50E1               	movf	fsr1l,w,c
   186   001092  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to BANK0 (32 bytes)
   189   001094  EE00  F080         	lfsr	0,__pbssBANK0
   190   001098  0E20               	movlw	32
   191   00109A                     clear_0:
   192   00109A  6AEE               	clrf	postinc0,c
   193   00109C  06E8               	decf	wreg,f,c
   194   00109E  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to COMRAM (18 bytes)
   197   0010A0  EE00  F042         	lfsr	0,__pbssCOMRAM
   198   0010A4  0E12               	movlw	18
   199   0010A6                     clear_1:
   200   0010A6  6AEE               	clrf	postinc0,c
   201   0010A8  06E8               	decf	wreg,f,c
   202   0010AA  E1FD               	bnz	clear_1
   203   0010AC                     end_of_initialization:
   204                           	callstack 0
   205   0010AC                     __end_of__initialization:
   206                           	callstack 0
   207   0010AC  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208   0010AE  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209   0010B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   210   0010B2  6EF8               	movwf	tblptru,c
   211   0010B4  0100               	movlb	0
   212   0010B6  EFDC  F003         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMRAM
   215   000042                     __pbssCOMRAM:
   216                           	callstack 0
   217   000042                     _str:
   218                           	callstack 0
   219   000042                     	ds	10
   220   00004C                     _score:
   221                           	callstack 0
   222   00004C                     	ds	2
   223   00004E                     _check_2:
   224                           	callstack 0
   225   00004E                     	ds	2
   226   000050                     _check_1:
   227                           	callstack 0
   228   000050                     	ds	2
   229   000052                     _check_0:
   230                           	callstack 0
   231   000052                     	ds	2
   232                           
   233                           	psect	dataCOMRAM
   234   000058                     __pdataCOMRAM:
   235                           	callstack 0
   236   000058                     _motor_num:
   237                           	callstack 0
   238   000058                     	ds	2
   239   00005A                     _T:
   240                           	callstack 0
   241   00005A                     	ds	2
   242                           
   243                           	psect	bssBANK0
   244   000080                     __pbssBANK0:
   245                           	callstack 0
   246   000080                     itoa@buf:
   247                           	callstack 0
   248   000080                     	ds	32
   249                           
   250                           	psect	cstackBANK0
   251   0000A0                     __pcstackBANK0:
   252                           	callstack 0
   253   0000A0                     ??_L_ISR:
   254                           
   255                           ; 1 bytes @ 0x0
   256   0000A0                     	ds	11
   257   0000AB                     ?_time:
   258                           	callstack 0
   259   0000AB                     UART_Write@data:
   260                           	callstack 0
   261   0000AB                     motor_angle@number:
   262                           	callstack 0
   263   0000AB                     time@t:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0xB
   267   0000AB                     	ds	1
   268   0000AC                     UART_Write_Text@text:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0xC
   272   0000AC                     	ds	1
   273   0000AD                     motor_angle@state:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xD
   277   0000AD                     	ds	1
   278   0000AE                     ??_UART_Write_Text:
   279                           
   280                           ; 1 bytes @ 0xE
   281   0000AE                     	ds	1
   282   0000AF                     srand@s:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0xF
   286   0000AF                     	ds	1
   287   0000B0                     UART_Write_Text@i:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x10
   291   0000B0                     	ds	1
   292   0000B1                     ??_srand:
   293                           
   294                           ; 1 bytes @ 0x11
   295   0000B1                     	ds	2
   296   0000B3                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x13
   299   0000B3                     	ds	2
   300                           
   301                           	psect	cstackCOMRAM
   302   000001                     __pcstackCOMRAM:
   303                           	callstack 0
   304   000001                     ?i2___awdiv:
   305                           	callstack 0
   306   000001                     ?i2___awmod:
   307                           	callstack 0
   308   000001                     i2UART_Write@data:
   309                           	callstack 0
   310   000001                     i2motor_angle@number:
   311                           	callstack 0
   312   000001                     i2___awdiv@dividend:
   313                           	callstack 0
   314   000001                     i2___awmod@dividend:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x0
   318   000001                     	ds	2
   319   000003                     i2motor_angle@state:
   320                           	callstack 0
   321   000003                     i2___awdiv@divisor:
   322                           	callstack 0
   323   000003                     i2___awmod@divisor:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x2
   327   000003                     	ds	2
   328   000005                     i2___awdiv@counter:
   329                           	callstack 0
   330   000005                     i2___awmod@counter:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x4
   334   000005                     	ds	1
   335   000006                     i2___awdiv@sign:
   336                           	callstack 0
   337   000006                     i2___awmod@sign:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x5
   341   000006                     	ds	1
   342   000007                     i2___awdiv@quotient:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x6
   346   000007                     	ds	2
   347   000009                     i2itoa@val:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x8
   351   000009                     	ds	2
   352   00000B                     i2itoa@base:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0xA
   356   00000B                     	ds	2
   357   00000D                     ??i2_itoa:
   358                           
   359                           ; 1 bytes @ 0xC
   360   00000D                     	ds	1
   361   00000E                     i2itoa@i:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0xD
   365   00000E                     	ds	2
   366   000010                     i2UART_Write_Text@text:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xF
   370   000010                     	ds	2
   371   000012                     ??i2_UART_Write_Text:
   372                           
   373                           ; 1 bytes @ 0x11
   374   000012                     	ds	2
   375   000014                     i2UART_Write_Text@i:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x13
   379   000014                     	ds	2
   380   000016                     ??_H_ISR:
   381                           
   382                           ; 1 bytes @ 0x15
   383   000016                     	ds	7
   384   00001D                     ?___awdiv:
   385                           	callstack 0
   386   00001D                     ?___lmul:
   387                           	callstack 0
   388   00001D                     i1UART_Write@data:
   389                           	callstack 0
   390   00001D                     ___awdiv@dividend:
   391                           	callstack 0
   392   00001D                     i1motor_angle@number:
   393                           	callstack 0
   394   00001D                     ___lmul@multiplier:
   395                           	callstack 0
   396                           
   397                           ; 4 bytes @ 0x1C
   398   00001D                     	ds	2
   399   00001F                     ___awdiv@divisor:
   400                           	callstack 0
   401   00001F                     i1motor_angle@state:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x1E
   405   00001F                     	ds	2
   406   000021                     ___awdiv@counter:
   407                           	callstack 0
   408   000021                     ___lmul@multiplicand:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x20
   412   000021                     	ds	1
   413   000022                     ___awdiv@sign:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x21
   417   000022                     	ds	1
   418   000023                     ___awdiv@quotient:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x22
   422   000023                     	ds	2
   423   000025                     ___lmul@product:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x24
   427   000025                     	ds	4
   428   000029                     ?_rand:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x28
   432   000029                     	ds	2
   433   00002B                     ??_rand:
   434                           
   435                           ; 1 bytes @ 0x2A
   436   00002B                     	ds	4
   437   00002F                     ?___awmod:
   438                           	callstack 0
   439   00002F                     ___awmod@dividend:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x2E
   443   00002F                     	ds	2
   444   000031                     ___awmod@divisor:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x30
   448   000031                     	ds	2
   449   000033                     ___awmod@counter:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x32
   453   000033                     	ds	1
   454   000034                     ___awmod@sign:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x33
   458   000034                     	ds	1
   459   000035                     itoa@val:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x34
   463   000035                     	ds	2
   464   000037                     itoa@base:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x36
   468   000037                     	ds	2
   469   000039                     ??_itoa:
   470                           
   471                           ; 1 bytes @ 0x38
   472   000039                     	ds	1
   473   00003A                     itoa@i:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x39
   477   00003A                     	ds	2
   478   00003C                     i1UART_Write_Text@text:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x3B
   482   00003C                     	ds	2
   483   00003E                     ??i1_UART_Write_Text:
   484                           
   485                           ; 1 bytes @ 0x3D
   486   00003E                     	ds	2
   487   000040                     i1UART_Write_Text@i:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x3F
   491   000040                     	ds	2
   492                           
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 134 in file "game.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0
   514 ;;      Temps:          0       2       0       0       0       0       0
   515 ;;      Totals:         0       2       0       0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels required when called: 8
   518 ;; This function calls:
   519 ;;		_UART_Initialize
   520 ;;		_UART_Write
   521 ;;		_UART_Write_Text
   522 ;;		_motor_angle
   523 ;;		_srand
   524 ;;		_time
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text0
   531   0007B8                     __ptext0:
   532                           	callstack 0
   533   0007B8                     _main:
   534                           	callstack 23
   535   0007B8                     
   536                           ;game.c: 137:     PR2 = 0x9b;
   537   0007B8  0E00               	movlw	0
   538   0007BA  0100               	movlb	0	; () banked
   539   0007BC  6FAB               	movwf	time@t& (0+255),b
   540   0007BE  0E00               	movlw	0
   541   0007C0  6FAC               	movwf	(time@t+1)& (0+255),b
   542   0007C2  EC5D  F008         	call	_time	;wreg free
   543   0007C6  C0AB  F0AF         	movff	?_time,srand@s
   544   0007CA  C0AC  F0B0         	movff	?_time+1,srand@s+1
   545   0007CE  EC78  F008         	call	_srand	;wreg free
   546   0007D2                     
   547                           ;game.c: 139:     CCP1CONbits.DC1B = 0b00;
   548   0007D2  0E0F               	movlw	15
   549   0007D4  6EC1               	movwf	193,c	;volatile
   550   0007D6                     
   551                           ;game.c: 141:     CCP2CONbits.DC2B = 0b00;
   552   0007D6  0E60               	movlw	96
   553   0007D8  6ED3               	movwf	211,c	;volatile
   554   0007DA                     
   555                           ;game.c: 142: 
   556   0007DA  0E07               	movlw	7
   557   0007DC  6ED5               	movwf	213,c	;volatile
   558   0007DE                     
   559                           ;game.c: 143: 
   560   0007DE  0EF0               	movlw	240
   561   0007E0  6ED7               	movwf	215,c	;volatile
   562   0007E2                     
   563                           ;game.c: 144:     TRISBbits.RB0 = 1;
   564   0007E2  0EB0               	movlw	176
   565   0007E4  6ED6               	movwf	214,c	;volatile
   566   0007E6                     
   567                           ;game.c: 146:     TRISBbits.RB2 = 1;
   568   0007E6  EC92  F008         	call	_UART_Initialize	;wreg free
   569   0007EA                     
   570                           ;game.c: 148:     TRISAbits.RA1 = 0;
   571   0007EA  84CA               	bsf	202,2,c	;volatile
   572   0007EC                     
   573                           ;game.c: 149:     TRISAbits.RA2 = 0;
   574   0007EC  0E03               	movlw	3
   575   0007EE  12CA               	iorwf	202,f,c	;volatile
   576   0007F0                     
   577                           ;game.c: 150:     LATA = 0;
   578   0007F0  50BD               	movf	189,w,c	;volatile
   579   0007F2  0BF0               	andlw	-16
   580   0007F4  090C               	iorlw	12
   581   0007F6  6EBD               	movwf	189,c	;volatile
   582   0007F8                     
   583                           ;game.c: 151:     LATB = 0;
   584   0007F8  50BA               	movf	186,w,c	;volatile
   585   0007FA  0BF0               	andlw	-16
   586   0007FC  090C               	iorlw	12
   587   0007FE  6EBA               	movwf	186,c	;volatile
   588   000800                     
   589                           ;game.c: 152: 
   590   000800  0E00               	movlw	0
   591   000802  6E94               	movwf	148,c	;volatile
   592   000804                     
   593                           ;game.c: 153:     RCONbits.IPEN = 1;
   594   000804  0E00               	movlw	0
   595   000806  6E8B               	movwf	139,c	;volatile
   596   000808                     
   597                           ;game.c: 154:     INTCONbits.GIE = 1;
   598   000808  0E9B               	movlw	155
   599   00080A  6ECB               	movwf	203,c	;volatile
   600   00080C                     
   601                           ;game.c: 155:     INTCONbits.GIEL = 1;
   602   00080C  0E3D               	movlw	61
   603   00080E  6EBE               	movwf	190,c	;volatile
   604   000810                     
   605                           ;game.c: 156: 
   606   000810  0ECF               	movlw	-49
   607   000812  16BD               	andwf	189,f,c	;volatile
   608   000814                     
   609                           ;game.c: 157:     UART_Initialize();
   610   000814  0E3D               	movlw	61
   611   000816  6EBB               	movwf	187,c	;volatile
   612   000818                     
   613                           ;game.c: 158: 
   614   000818  0ECF               	movlw	-49
   615   00081A  16BA               	andwf	186,f,c	;volatile
   616   00081C                     
   617                           ;game.c: 161:     INTCON3bits.INT1IE = 1;
   618   00081C  8093               	bsf	147,0,c	;volatile
   619   00081E                     
   620                           ;game.c: 162:     INTCON3bits.INT1IF = 0;
   621   00081E  8293               	bsf	147,1,c	;volatile
   622   000820                     
   623                           ;game.c: 163:     INTCON3bits.INT1IP = 1;
   624   000820  8493               	bsf	147,2,c	;volatile
   625   000822                     
   626                           ;game.c: 164: 
   627   000822  9092               	bcf	146,0,c	;volatile
   628   000824                     
   629                           ;game.c: 165:     INTCONbits.TMR0IE = 1;
   630   000824  9292               	bcf	146,1,c	;volatile
   631   000826                     
   632                           ;game.c: 166:     INTCONbits.TMR0IF = 0;
   633   000826  9492               	bcf	146,2,c	;volatile
   634   000828                     
   635                           ;game.c: 167:     INTCON2bits.TMR0IP = 0;
   636   000828  0E00               	movlw	0
   637   00082A  6E89               	movwf	137,c	;volatile
   638   00082C                     
   639                           ;game.c: 168:     T0CONbits.TMR0ON = 1;
   640   00082C  0E00               	movlw	0
   641   00082E  6E8A               	movwf	138,c	;volatile
   642   000830                     
   643                           ;game.c: 170: 
   644   000830  8ED0               	bsf	208,7,c	;volatile
   645   000832                     
   646                           ;game.c: 171: 
   647   000832  8EF2               	bsf	242,7,c	;volatile
   648   000834                     
   649                           ;game.c: 172:     TRISAbits.RA3 = 0;
   650   000834  8CF2               	bsf	242,6,c	;volatile
   651   000836                     
   652                           ;game.c: 174: 
   653   000836  EC92  F008         	call	_UART_Initialize	;wreg free
   654   00083A                     
   655                           ;game.c: 176:     UART_Write_Text("Score : " );
   656   00083A  88F2               	bsf	242,4,c	;volatile
   657   00083C                     
   658                           ;game.c: 177:     _delay((unsigned long)((4000)*(1000000/4000.0)));
   659   00083C  92F2               	bcf	242,1,c	;volatile
   660   00083E                     
   661                           ;game.c: 178:     motor_angle(0,0);
   662   00083E  86F0               	bsf	240,3,c	;volatile
   663   000840                     
   664                           ;game.c: 179:     motor_angle(1,0);
   665   000840  90F0               	bcf	240,0,c	;volatile
   666   000842                     
   667                           ;game.c: 180:     while(1);
   668   000842  8CF0               	bsf	240,6,c	;volatile
   669   000844                     
   670                           ;game.c: 182:     return;
   671   000844  8AF2               	bsf	242,5,c	;volatile
   672   000846                     
   673                           ;game.c: 183: }
   674   000846  94F2               	bcf	242,2,c	;volatile
   675   000848  94F1               	bcf	241,2,c	;volatile
   676   00084A  8ED5               	bsf	213,7,c	;volatile
   677   00084C  9692               	bcf	146,3,c	;volatile
   678   00084E  9892               	bcf	146,4,c	;volatile
   679   000850  0E0D               	movlw	13
   680   000852  EC86  F008         	call	_UART_Write
   681   000856  0E12               	movlw	low STR_2
   682   000858  0100               	movlb	0	; () banked
   683   00085A  6FAC               	movwf	UART_Write_Text@text& (0+255),b
   684   00085C  51AC               	movf	UART_Write_Text@text& (0+255),w,b
   685   00085E  A4D8               	btfss	status,2,c
   686   000860  0E06               	movlw	high __smallconst
   687   000862  6FAD               	movwf	(UART_Write_Text@text+1)& (0+255),b
   688   000864  EC57  F006         	call	_UART_Write_Text	;wreg free
   689   000868  0E06               	movlw	6
   690   00086A  0100               	movlb	0	; () banked
   691   00086C  6FB4               	movwf	(??_main+1)& (0+255),b
   692   00086E  0E13               	movlw	19
   693   000870  6FB3               	movwf	??_main& (0+255),b
   694   000872  0EAD               	movlw	173
   695   000874                     u1507:
   696   000874  2EE8               	decfsz	wreg,f,c
   697   000876  D7FE               	bra	u1507
   698   000878  2FB3               	decfsz	??_main& (0+255),f,b
   699   00087A  D7FC               	bra	u1507
   700   00087C  2FB4               	decfsz	(??_main+1)& (0+255),f,b
   701   00087E  D7FA               	bra	u1507
   702   000880  D000               	nop2	
   703   000882  0E00               	movlw	0
   704   000884  0100               	movlb	0	; () banked
   705   000886  6FAC               	movwf	(motor_angle@number+1)& (0+255),b
   706   000888  0E00               	movlw	0
   707   00088A  6FAB               	movwf	motor_angle@number& (0+255),b
   708   00088C  0E00               	movlw	0
   709   00088E  6FAE               	movwf	(motor_angle@state+1)& (0+255),b
   710   000890  0E00               	movlw	0
   711   000892  6FAD               	movwf	motor_angle@state& (0+255),b
   712   000894  EC17  F007         	call	_motor_angle	;wreg free
   713   000898  0E00               	movlw	0
   714   00089A  0100               	movlb	0	; () banked
   715   00089C  6FAC               	movwf	(motor_angle@number+1)& (0+255),b
   716   00089E  0E01               	movlw	1
   717   0008A0  6FAB               	movwf	motor_angle@number& (0+255),b
   718   0008A2  0E00               	movlw	0
   719   0008A4  6FAE               	movwf	(motor_angle@state+1)& (0+255),b
   720   0008A6  0E00               	movlw	0
   721   0008A8  6FAD               	movwf	motor_angle@state& (0+255),b
   722   0008AA  EC17  F007         	call	_motor_angle	;wreg free
   723   0008AE                     l128:
   724   0008AE  EF57  F004         	goto	l128
   725   0008B2  EF20  F001         	goto	start
   726   0008B6                     __end_of_main:
   727                           	callstack 0
   728                           
   729 ;; *************** function _time *****************
   730 ;; Defined at:
   731 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\time.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  t               2   11[BANK0 ] PTR unsigned long 
   734 ;;		 -> NULL(0), 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  4   11[BANK0 ] unsigned long 
   739 ;; Registers used:
   740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   746 ;;      Params:         0       4       0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0
   749 ;;      Totals:         0       4       0       0       0       0       0
   750 ;;Total ram usage:        4 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 6
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text1
   761   0010BA                     __ptext1:
   762                           	callstack 0
   763   0010BA                     _time:
   764                           	callstack 24
   765   0010BA  0100               	movlb	0	; () banked
   766   0010BC  51AB               	movf	time@t& (0+255),w,b
   767   0010BE  11AC               	iorwf	(time@t+1)& (0+255),w,b
   768   0010C0  B4D8               	btfsc	status,2,c
   769   0010C2  EF65  F008         	goto	u1111
   770   0010C6  EF67  F008         	goto	u1110
   771   0010CA                     u1111:
   772   0010CA  EF73  F008         	goto	l1600
   773   0010CE                     u1110:
   774   0010CE                     
   775                           ; BSR set to: 0
   776   0010CE  C0AB  FFD9         	movff	time@t,fsr2l
   777   0010D2  C0AC  FFDA         	movff	time@t+1,fsr2h
   778   0010D6  0EFF               	movlw	255
   779   0010D8  6EDE               	movwf	postinc2,c
   780   0010DA  0EFF               	movlw	255
   781   0010DC  6EDE               	movwf	postinc2,c
   782   0010DE  0EFF               	movlw	255
   783   0010E0  6EDE               	movwf	postinc2,c
   784   0010E2  0EFF               	movlw	255
   785   0010E4  6EDD               	movwf	postdec2,c
   786   0010E6                     l1600:
   787                           
   788                           ; BSR set to: 0
   789   0010E6  69AB               	setf	?_time& (0+255),b
   790   0010E8  69AC               	setf	(?_time+1)& (0+255),b
   791   0010EA  69AD               	setf	(?_time+2)& (0+255),b
   792   0010EC  69AE               	setf	(?_time+3)& (0+255),b
   793   0010EE                     
   794                           ; BSR set to: 0
   795   0010EE  0012               	return		;funcret
   796   0010F0                     __end_of_time:
   797                           	callstack 0
   798                           
   799 ;; *************** function _srand *****************
   800 ;; Defined at:
   801 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\rand.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  s               2   15[BANK0 ] unsigned int 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   815 ;;      Params:         0       2       0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0
   817 ;;      Temps:          0       2       0       0       0       0       0
   818 ;;      Totals:         0       4       0       0       0       0       0
   819 ;;Total ram usage:        4 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 6
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text2
   830   0010F0                     __ptext2:
   831                           	callstack 0
   832   0010F0                     _srand:
   833                           	callstack 24
   834   0010F0  0EFF               	movlw	255
   835   0010F2  0100               	movlb	0	; () banked
   836   0010F4  25AF               	addwf	srand@s& (0+255),w,b
   837   0010F6  6FB1               	movwf	??_srand& (0+255),b
   838   0010F8  0EFF               	movlw	255
   839   0010FA  21B0               	addwfc	(srand@s+1)& (0+255),w,b
   840   0010FC  6FB2               	movwf	(??_srand+1)& (0+255),b
   841   0010FE  C0B1  F054         	movff	??_srand,_seed
   842   001102  C0B2  F055         	movff	??_srand+1,_seed+1
   843   001106  6A56               	clrf	(_seed+2)^0,c
   844   001108  6A57               	clrf	(_seed+3)^0,c
   845   00110A                     
   846                           ; BSR set to: 0
   847   00110A  0012               	return		;funcret
   848   00110C                     __end_of_srand:
   849                           	callstack 0
   850                           
   851 ;; *************** function _motor_angle *****************
   852 ;; Defined at:
   853 ;;		line 40 in file "game.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  number          2   11[BANK0 ] int 
   856 ;;  state           2   13[BANK0 ] int 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   868 ;;      Params:         0       4       0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0
   871 ;;      Totals:         0       4       0       0       0       0       0
   872 ;;Total ram usage:        4 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 6
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text3
   883   000E2E                     __ptext3:
   884                           	callstack 0
   885   000E2E                     _motor_angle:
   886                           	callstack 24
   887   000E2E                     
   888                           ;game.c: 41:             CCP2CONbits.DC2B = 0b00;
   889   000E2E  0100               	movlb	0	; () banked
   890   000E30  51AB               	movf	motor_angle@number& (0+255),w,b
   891   000E32  11AC               	iorwf	(motor_angle@number+1)& (0+255),w,b
   892   000E34  A4D8               	btfss	status,2,c
   893   000E36  EF1F  F007         	goto	u1031
   894   000E3A  EF21  F007         	goto	u1030
   895   000E3E                     u1031:
   896   000E3E  EF36  F007         	goto	l1572
   897   000E42                     u1030:
   898   000E42                     
   899                           ; BSR set to: 0
   900                           ;game.c: 42:         }
   901   000E42  51AD               	movf	motor_angle@state& (0+255),w,b
   902   000E44  11AE               	iorwf	(motor_angle@state+1)& (0+255),w,b
   903   000E46  A4D8               	btfss	status,2,c
   904   000E48  EF28  F007         	goto	u1041
   905   000E4C  EF2A  F007         	goto	u1040
   906   000E50                     u1041:
   907   000E50  EF32  F007         	goto	l1570
   908   000E54                     u1040:
   909   000E54                     
   910                           ; BSR set to: 0
   911                           ;game.c: 43:     }
   912   000E54  0E78               	movlw	120
   913   000E56  6EBE               	movwf	190,c	;volatile
   914                           
   915                           ;game.c: 44:     return;
   916   000E58  50BD               	movf	189,w,c	;volatile
   917   000E5A  0BCF               	andlw	-49
   918   000E5C  0910               	iorlw	16
   919   000E5E  6EBD               	movwf	189,c	;volatile
   920                           
   921                           ;game.c: 45: }
   922   000E60  EF36  F007         	goto	l1572
   923   000E64                     l1570:
   924                           
   925                           ; BSR set to: 0
   926                           ;game.c: 47: void __attribute__((picinterrupt(("high_priority"))))H_ISR(){
   927   000E64  0E3D               	movlw	61
   928   000E66  6EBE               	movwf	190,c	;volatile
   929                           
   930                           ;game.c: 48:     if(INTCONbits.INT0IF == 1 || INTCON3bits.INT1IF == 1){
   931   000E68  0ECF               	movlw	-49
   932   000E6A  16BD               	andwf	189,f,c	;volatile
   933   000E6C                     l1572:
   934                           
   935                           ; BSR set to: 0
   936                           ;game.c: 51:             check_0 = 1;
   937   000E6C  05AB               	decf	motor_angle@number& (0+255),w,b
   938   000E6E  11AC               	iorwf	(motor_angle@number+1)& (0+255),w,b
   939   000E70  A4D8               	btfss	status,2,c
   940   000E72  EF3D  F007         	goto	u1051
   941   000E76  EF3F  F007         	goto	u1050
   942   000E7A                     u1051:
   943   000E7A  EF54  F007         	goto	l95
   944   000E7E                     u1050:
   945   000E7E                     
   946                           ; BSR set to: 0
   947                           ;game.c: 52:         }
   948   000E7E  51AD               	movf	motor_angle@state& (0+255),w,b
   949   000E80  11AE               	iorwf	(motor_angle@state+1)& (0+255),w,b
   950   000E82  A4D8               	btfss	status,2,c
   951   000E84  EF46  F007         	goto	u1061
   952   000E88  EF48  F007         	goto	u1060
   953   000E8C                     u1061:
   954   000E8C  EF50  F007         	goto	l1578
   955   000E90                     u1060:
   956   000E90                     
   957                           ; BSR set to: 0
   958                           ;game.c: 53:         if(INTCON3bits.INT1IF == 1){
   959   000E90  0E78               	movlw	120
   960   000E92  6EBB               	movwf	187,c	;volatile
   961                           
   962                           ;game.c: 54:             LATAbits.LA1 = 1;
   963   000E94  50BA               	movf	186,w,c	;volatile
   964   000E96  0BCF               	andlw	-49
   965   000E98  0910               	iorlw	16
   966   000E9A  6EBA               	movwf	186,c	;volatile
   967                           
   968                           ;game.c: 55:             check_1 = 1;
   969   000E9C  EF54  F007         	goto	l95
   970   000EA0                     l1578:
   971                           
   972                           ; BSR set to: 0
   973                           ;game.c: 57:         if((motor_num==0&&check_0==1) || (motor_num==1&&check_1==1)){
   974   000EA0  0E3D               	movlw	61
   975   000EA2  6EBB               	movwf	187,c	;volatile
   976                           
   977                           ;game.c: 58:             LATAbits.LA4 = 1;
   978   000EA4  0ECF               	movlw	-49
   979   000EA6  16BA               	andwf	186,f,c	;volatile
   980   000EA8                     l95:
   981                           
   982                           ; BSR set to: 0
   983   000EA8  0012               	return		;funcret
   984   000EAA                     __end_of_motor_angle:
   985                           	callstack 0
   986                           
   987 ;; *************** function _UART_Write_Text *****************
   988 ;; Defined at:
   989 ;;		line 27 in file "uart.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  text            2   12[BANK0 ] PTR unsigned char 
   992 ;;		 -> STR_4(9), STR_3(9), STR_2(9), itoa@buf(32), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  i               2   16[BANK0 ] int 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1004 ;;      Params:         0       2       0       0       0       0       0
  1005 ;;      Locals:         0       2       0       0       0       0       0
  1006 ;;      Temps:          0       2       0       0       0       0       0
  1007 ;;      Totals:         0       6       0       0       0       0       0
  1008 ;;Total ram usage:        6 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 7
  1011 ;; This function calls:
  1012 ;;		_UART_Write
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text4
  1019   000CAE                     __ptext4:
  1020                           	callstack 0
  1021   000CAE                     _UART_Write_Text:
  1022                           	callstack 23
  1023   000CAE                     
  1024                           ;uart.c: 28:     for(int i=0;text[i]!='\0';i++)
  1025   000CAE  0E00               	movlw	0
  1026   000CB0  0100               	movlb	0	; () banked
  1027   000CB2  6FB1               	movwf	(UART_Write_Text@i+1)& (0+255),b
  1028   000CB4  0E00               	movlw	0
  1029   000CB6  6FB0               	movwf	UART_Write_Text@i& (0+255),b
  1030   000CB8  EF7A  F006         	goto	l1588
  1031   000CBC                     l1584:
  1032                           
  1033                           ;uart.c: 29:         UART_Write(text[i]);
  1034   000CBC  0100               	movlb	0	; () banked
  1035   000CBE  51B0               	movf	UART_Write_Text@i& (0+255),w,b
  1036   000CC0  25AC               	addwf	UART_Write_Text@text& (0+255),w,b
  1037   000CC2  6FAE               	movwf	??_UART_Write_Text& (0+255),b
  1038   000CC4  51B1               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  1039   000CC6  21AD               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  1040   000CC8  6FAF               	movwf	(??_UART_Write_Text+1)& (0+255),b
  1041   000CCA  C0AE  FFF6         	movff	??_UART_Write_Text,tblptrl
  1042   000CCE  C0AF  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1043   000CD2  6AF8               	clrf	tblptru,c
  1044   000CD4  0E05               	movlw	(high __ramtop+-1)
  1045   000CD6  64F7               	cpfsgt	tblptrh,c
  1046   000CD8  D003               	bra	u1077
  1047   000CDA  0008               	tblrd		*
  1048   000CDC  50F5               	movf	tablat,w,c
  1049   000CDE  D005               	bra	u1070
  1050   000CE0                     u1077:
  1051   000CE0  CFF6 FFD9          	movff	tblptrl,fsr2l
  1052   000CE4  CFF7 FFDA          	movff	tblptrh,fsr2h
  1053   000CE8  50DF               	movf	indf2,w,c
  1054   000CEA                     u1070:
  1055   000CEA  EC86  F008         	call	_UART_Write
  1056   000CEE  0100               	movlb	0	; () banked
  1057   000CF0  4BB0               	infsnz	UART_Write_Text@i& (0+255),f,b
  1058   000CF2  2BB1               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  1059   000CF4                     l1588:
  1060                           
  1061                           ; BSR set to: 0
  1062   000CF4  51B0               	movf	UART_Write_Text@i& (0+255),w,b
  1063   000CF6  25AC               	addwf	UART_Write_Text@text& (0+255),w,b
  1064   000CF8  6FAE               	movwf	??_UART_Write_Text& (0+255),b
  1065   000CFA  51B1               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  1066   000CFC  21AD               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  1067   000CFE  6FAF               	movwf	(??_UART_Write_Text+1)& (0+255),b
  1068   000D00  C0AE  FFF6         	movff	??_UART_Write_Text,tblptrl
  1069   000D04  C0AF  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1070   000D08  6AF8               	clrf	tblptru,c
  1071   000D0A  0E05               	movlw	(high __ramtop+-1)
  1072   000D0C  64F7               	cpfsgt	tblptrh,c
  1073   000D0E  D003               	bra	u1087
  1074   000D10  0008               	tblrd		*
  1075   000D12  50F5               	movf	tablat,w,c
  1076   000D14  D005               	bra	u1080
  1077   000D16                     u1087:
  1078   000D16  CFF6 FFD9          	movff	tblptrl,fsr2l
  1079   000D1A  CFF7 FFDA          	movff	tblptrh,fsr2h
  1080   000D1E  50DF               	movf	indf2,w,c
  1081   000D20                     u1080:
  1082   000D20  0900               	iorlw	0
  1083   000D22  A4D8               	btfss	status,2,c
  1084   000D24  EF96  F006         	goto	u1091
  1085   000D28  EF98  F006         	goto	u1090
  1086   000D2C                     u1091:
  1087   000D2C  EF5E  F006         	goto	l1584
  1088   000D30                     u1090:
  1089   000D30  0012               	return		;funcret
  1090   000D32                     __end_of_UART_Write_Text:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _UART_Write *****************
  1094 ;; Defined at:
  1095 ;;		line 20 in file "uart.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  data            1    wreg     unsigned char 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  data            1   11[BANK0 ] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1109 ;;      Params:         0       0       0       0       0       0       0
  1110 ;;      Locals:         0       1       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0
  1112 ;;      Totals:         0       1       0       0       0       0       0
  1113 ;;Total ram usage:        1 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 6
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;;		_UART_Write_Text
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text5
  1125   00110C                     __ptext5:
  1126                           	callstack 0
  1127   00110C                     _UART_Write:
  1128                           	callstack 23
  1129                           
  1130                           ;incstack = 0
  1131                           ;UART_Write@data stored from wreg
  1132   00110C  0100               	movlb	0	; () banked
  1133   00110E  6FAB               	movwf	UART_Write@data& (0+255),b
  1134   001110                     l151:
  1135   001110  A2AC               	btfss	172,1,c	;volatile
  1136   001112  EF8D  F008         	goto	u721
  1137   001116  EF8F  F008         	goto	u720
  1138   00111A                     u721:
  1139   00111A  EF88  F008         	goto	l151
  1140   00111E                     u720:
  1141   00111E                     
  1142                           ;uart.c: 23:     TXREG = data;
  1143   00111E  C0AB  FFAD         	movff	UART_Write@data,4013	;volatile
  1144   001122  0012               	return		;funcret
  1145   001124                     __end_of_UART_Write:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _UART_Initialize *****************
  1149 ;; Defined at:
  1150 ;;		line 3 in file "uart.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1164 ;;      Params:         0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 6
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text6
  1179   001124                     __ptext6:
  1180                           	callstack 0
  1181   001124                     _UART_Initialize:
  1182                           	callstack 24
  1183   001124                     
  1184                           ;uart.c: 5:     TRISCbits.TRISC6 = 1;
  1185   001124  8C94               	bsf	148,6,c	;volatile
  1186                           
  1187                           ;uart.c: 6:     TRISCbits.TRISC7 = 1;
  1188   001126  8E94               	bsf	148,7,c	;volatile
  1189                           
  1190                           ;uart.c: 8:     TXSTAbits.SYNC = 0;
  1191   001128  98AC               	bcf	172,4,c	;volatile
  1192                           
  1193                           ;uart.c: 9:     BAUDCONbits.BRG16 = 0;
  1194   00112A  96B8               	bcf	184,3,c	;volatile
  1195   00112C                     
  1196                           ;uart.c: 10:     SPBRG = 51;
  1197   00112C  0E33               	movlw	51
  1198   00112E  6EAF               	movwf	175,c	;volatile
  1199   001130                     
  1200                           ;uart.c: 12:     RCSTAbits.SPEN = 1;
  1201   001130  8EAB               	bsf	171,7,c	;volatile
  1202   001132                     
  1203                           ;uart.c: 13:     PIR1bits.TXIF = 1;
  1204   001132  889E               	bsf	158,4,c	;volatile
  1205   001134                     
  1206                           ;uart.c: 14:     PIR1bits.RCIF = 0;
  1207   001134  9A9E               	bcf	158,5,c	;volatile
  1208   001136                     
  1209                           ;uart.c: 15:     TXSTAbits.TXEN = 1;
  1210   001136  8AAC               	bsf	172,5,c	;volatile
  1211   001138                     
  1212                           ;uart.c: 16:     RCSTAbits.CREN = 1;
  1213   001138  88AB               	bsf	171,4,c	;volatile
  1214   00113A  0012               	return		;funcret
  1215   00113C                     __end_of_UART_Initialize:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _L_ISR *****************
  1219 ;; Defined at:
  1220 ;;		line 103 in file "game.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1234 ;;      Params:         0       0       0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0
  1236 ;;      Temps:          0      11       0       0       0       0       0
  1237 ;;      Totals:         0      11       0       0       0       0       0
  1238 ;;Total ram usage:       11 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 5
  1241 ;; This function calls:
  1242 ;;		___awmod
  1243 ;;		_itoa
  1244 ;;		_rand
  1245 ;;		i1_UART_Write
  1246 ;;		i1_UART_Write_Text
  1247 ;;		i1_motor_angle
  1248 ;; This function is called by:
  1249 ;;		Interrupt level 1
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	intcodelo
  1254   000018                     __pintcodelo:
  1255                           	callstack 0
  1256   000018                     _L_ISR:
  1257                           	callstack 23
  1258                           
  1259                           ;incstack = 0
  1260   000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1261   00001A  CFD8 F0A2          	movff	status,??_L_ISR+2
  1262   00001E  CFE8 F0A3          	movff	wreg,??_L_ISR+3
  1263   000022  CFE0 F0A4          	movff	bsr,??_L_ISR+4
  1264   000026  CFD9 F0A5          	movff	fsr2l,??_L_ISR+5
  1265   00002A  CFDA F0A6          	movff	fsr2h,??_L_ISR+6
  1266   00002E  CFF6 F0A7          	movff	tblptrl,??_L_ISR+7
  1267   000032  CFF7 F0A8          	movff	tblptrh,??_L_ISR+8
  1268   000036  CFF8 F0A9          	movff	tblptru,??_L_ISR+9
  1269   00003A  CFF5 F0AA          	movff	tablat,??_L_ISR+10
  1270   00003E                     
  1271                           ;game.c: 105:     else if(score >=10)
  1272   00003E  A4F2               	btfss	4082,2,c	;volatile
  1273   000040  EF24  F000         	goto	i1u143_21
  1274   000044  EF26  F000         	goto	i1u143_20
  1275   000048                     i1u143_21:
  1276   000048  EF0C  F001         	goto	i1l123
  1277   00004C                     i1u143_20:
  1278   00004C                     
  1279                           ;game.c: 106:         _delay((unsigned long)((2500)*(1000000/4000.0)));
  1280   00004C  9ED5               	bcf	213,7,c	;volatile
  1281   00004E                     
  1282                           ;game.c: 107: 
  1283   00004E  0E0D               	movlw	13
  1284   000050  EC9E  F008         	call	i1_UART_Write
  1285   000054                     
  1286                           ;game.c: 108: 
  1287   000054  0E12               	movlw	low STR_2
  1288   000056  6E3C               	movwf	i1UART_Write_Text@text^0,c
  1289   000058  503C               	movf	i1UART_Write_Text@text^0,w,c
  1290   00005A  A4D8               	btfss	status,2,c
  1291   00005C  0E06               	movlw	high __smallconst
  1292   00005E  6E3D               	movwf	(i1UART_Write_Text@text+1)^0,c
  1293   000060  EC99  F006         	call	i1_UART_Write_Text	;wreg free
  1294   000064                     
  1295                           ;game.c: 109: 
  1296   000064  C04C  F035         	movff	_score,itoa@val
  1297   000068  C04D  F036         	movff	_score+1,itoa@val+1
  1298   00006C  0E00               	movlw	0
  1299   00006E  6E38               	movwf	(itoa@base+1)^0,c
  1300   000070  0E0A               	movlw	10
  1301   000072  6E37               	movwf	itoa@base^0,c
  1302   000074  ECCF  F005         	call	_itoa	;wreg free
  1303   000078  0100               	movlb	0	; () banked
  1304   00007A  6FA0               	movwf	??_L_ISR& (0+255),b
  1305   00007C  C0A0  F03C         	movff	??_L_ISR,i1UART_Write_Text@text
  1306   000080  6A3D               	clrf	(i1UART_Write_Text@text+1)^0,c
  1307   000082  EC99  F006         	call	i1_UART_Write_Text	;wreg free
  1308   000086                     
  1309                           ;game.c: 110:     TMR0IF=0;
  1310   000086  ECCF  F007         	call	_rand	;wreg free
  1311   00008A  C029  F02F         	movff	?_rand,___awmod@dividend
  1312   00008E  C02A  F030         	movff	?_rand+1,___awmod@dividend+1
  1313   000092  0E00               	movlw	0
  1314   000094  6E32               	movwf	(___awmod@divisor+1)^0,c
  1315   000096  0E03               	movlw	3
  1316   000098  6E31               	movwf	___awmod@divisor^0,c
  1317   00009A  EC1F  F005         	call	___awmod	;wreg free
  1318   00009E  C02F  F058         	movff	?___awmod,_motor_num
  1319   0000A2  C030  F059         	movff	?___awmod+1,_motor_num+1
  1320   0000A6                     
  1321                           ;game.c: 111:     TMR0H = 0xF0;
  1322   0000A6  C058  F01D         	movff	_motor_num,i1motor_angle@number
  1323   0000AA  C059  F01E         	movff	_motor_num+1,i1motor_angle@number+1
  1324   0000AE  0E00               	movlw	0
  1325   0000B0  6E20               	movwf	(i1motor_angle@state+1)^0,c
  1326   0000B2  0E01               	movlw	1
  1327   0000B4  6E1F               	movwf	i1motor_angle@state^0,c
  1328   0000B6  EC55  F007         	call	i1_motor_angle	;wreg free
  1329   0000BA                     
  1330                           ;game.c: 112:     TMR0L = 0xB0;
  1331   0000BA  BE4D               	btfsc	(_score+1)^0,7,c
  1332   0000BC  EF6B  F000         	goto	i1u144_20
  1333   0000C0  504D               	movf	(_score+1)^0,w,c
  1334   0000C2  E107               	bnz	i1u144_21
  1335   0000C4  0E05               	movlw	5
  1336   0000C6  5C4C               	subwf	_score^0,w,c
  1337   0000C8  B0D8               	btfsc	status,0,c
  1338   0000CA  EF69  F000         	goto	i1u144_21
  1339   0000CE  EF6B  F000         	goto	i1u144_20
  1340   0000D2                     i1u144_21:
  1341   0000D2  EF7A  F000         	goto	i1l1902
  1342   0000D6                     i1u144_20:
  1343   0000D6                     
  1344                           ;game.c: 113:     T0CONbits.TMR0ON = 1;
  1345   0000D6  0E06               	movlw	6
  1346   0000D8  0100               	movlb	0	; () banked
  1347   0000DA  6FA1               	movwf	(??_L_ISR+1)& (0+255),b
  1348   0000DC  0E13               	movlw	19
  1349   0000DE  6FA0               	movwf	??_L_ISR& (0+255),b
  1350   0000E0  0EAD               	movlw	173
  1351   0000E2                     i1u151_27:
  1352   0000E2  2EE8               	decfsz	wreg,f,c
  1353   0000E4  D7FE               	bra	i1u151_27
  1354   0000E6  2FA0               	decfsz	??_L_ISR& (0+255),f,b
  1355   0000E8  D7FC               	bra	i1u151_27
  1356   0000EA  2FA1               	decfsz	(??_L_ISR+1)& (0+255),f,b
  1357   0000EC  D7FA               	bra	i1u151_27
  1358   0000EE  D000               	nop2	
  1359   0000F0  EFB2  F000         	goto	i1l1910
  1360   0000F4                     i1l1902:
  1361   0000F4  BE4D               	btfsc	(_score+1)^0,7,c
  1362   0000F6  EF86  F000         	goto	i1u145_21
  1363   0000FA  504D               	movf	(_score+1)^0,w,c
  1364   0000FC  E109               	bnz	i1u145_20
  1365   0000FE  0E05               	movlw	5
  1366   000100  5C4C               	subwf	_score^0,w,c
  1367   000102  A0D8               	btfss	status,0,c
  1368   000104  EF86  F000         	goto	i1u145_21
  1369   000108  EF88  F000         	goto	i1u145_20
  1370   00010C                     i1u145_21:
  1371   00010C  EFA5  F000         	goto	i1l1908
  1372   000110                     i1u145_20:
  1373   000110  BE4D               	btfsc	(_score+1)^0,7,c
  1374   000112  EF96  F000         	goto	i1u146_20
  1375   000116  504D               	movf	(_score+1)^0,w,c
  1376   000118  E107               	bnz	i1u146_21
  1377   00011A  0E0A               	movlw	10
  1378   00011C  5C4C               	subwf	_score^0,w,c
  1379   00011E  B0D8               	btfsc	status,0,c
  1380   000120  EF94  F000         	goto	i1u146_21
  1381   000124  EF96  F000         	goto	i1u146_20
  1382   000128                     i1u146_21:
  1383   000128  EFA5  F000         	goto	i1l1908
  1384   00012C                     i1u146_20:
  1385   00012C                     
  1386                           ;game.c: 115: }
  1387   00012C  0E03               	movlw	3
  1388   00012E  0100               	movlb	0	; () banked
  1389   000130  6FA1               	movwf	(??_L_ISR+1)& (0+255),b
  1390   000132  0E8A               	movlw	138
  1391   000134  6FA0               	movwf	??_L_ISR& (0+255),b
  1392   000136  0E55               	movlw	85
  1393   000138                     i1u152_27:
  1394   000138  2EE8               	decfsz	wreg,f,c
  1395   00013A  D7FE               	bra	i1u152_27
  1396   00013C  2FA0               	decfsz	??_L_ISR& (0+255),f,b
  1397   00013E  D7FC               	bra	i1u152_27
  1398   000140  2FA1               	decfsz	(??_L_ISR+1)& (0+255),f,b
  1399   000142  D7FA               	bra	i1u152_27
  1400   000144  D000               	nop2	
  1401   000146  EFB2  F000         	goto	i1l1910
  1402   00014A                     i1l1908:
  1403                           
  1404                           ;game.c: 117: void main(void)
  1405   00014A  0E02               	movlw	2
  1406   00014C  0100               	movlb	0	; () banked
  1407   00014E  6FA1               	movwf	(??_L_ISR+1)& (0+255),b
  1408   000150  0EE7               	movlw	231
  1409   000152  6FA0               	movwf	??_L_ISR& (0+255),b
  1410   000154  0E00               	movlw	0
  1411   000156                     i1u153_27:
  1412   000156  2EE8               	decfsz	wreg,f,c
  1413   000158  D7FE               	bra	i1u153_27
  1414   00015A  2FA0               	decfsz	??_L_ISR& (0+255),f,b
  1415   00015C  D7FC               	bra	i1u153_27
  1416   00015E  2FA1               	decfsz	(??_L_ISR+1)& (0+255),f,b
  1417   000160  D7FA               	bra	i1u153_27
  1418   000162  0000               	nop	
  1419   000164                     i1l1910:
  1420                           
  1421                           ;game.c: 118: {
  1422   000164  C058  F01D         	movff	_motor_num,i1motor_angle@number
  1423   000168  C059  F01E         	movff	_motor_num+1,i1motor_angle@number+1
  1424   00016C  0E00               	movlw	0
  1425   00016E  6E20               	movwf	(i1motor_angle@state+1)^0,c
  1426   000170  0E00               	movlw	0
  1427   000172  6E1F               	movwf	i1motor_angle@state^0,c
  1428   000174  EC55  F007         	call	i1_motor_angle	;wreg free
  1429   000178                     
  1430                           ;game.c: 119: 
  1431   000178  0E00               	movlw	0
  1432   00017A  6E59               	movwf	(_motor_num+1)^0,c
  1433   00017C  0E05               	movlw	5
  1434   00017E  6E58               	movwf	_motor_num^0,c
  1435   000180                     
  1436                           ;game.c: 120:     srand( time(((void*)0)) );
  1437   000180  BE4D               	btfsc	(_score+1)^0,7,c
  1438   000182  EFCC  F000         	goto	i1u147_21
  1439   000186  504D               	movf	(_score+1)^0,w,c
  1440   000188  E109               	bnz	i1u147_20
  1441   00018A  0E05               	movlw	5
  1442   00018C  5C4C               	subwf	_score^0,w,c
  1443   00018E  A0D8               	btfss	status,0,c
  1444   000190  EFCC  F000         	goto	i1u147_21
  1445   000194  EFCE  F000         	goto	i1u147_20
  1446   000198                     i1u147_21:
  1447   000198  EFEB  F000         	goto	i1l1920
  1448   00019C                     i1u147_20:
  1449   00019C  BE4D               	btfsc	(_score+1)^0,7,c
  1450   00019E  EFDC  F000         	goto	i1u148_20
  1451   0001A2  504D               	movf	(_score+1)^0,w,c
  1452   0001A4  E107               	bnz	i1u148_21
  1453   0001A6  0E0A               	movlw	10
  1454   0001A8  5C4C               	subwf	_score^0,w,c
  1455   0001AA  B0D8               	btfsc	status,0,c
  1456   0001AC  EFDA  F000         	goto	i1u148_21
  1457   0001B0  EFDC  F000         	goto	i1u148_20
  1458   0001B4                     i1u148_21:
  1459   0001B4  EFEB  F000         	goto	i1l1920
  1460   0001B8                     i1u148_20:
  1461   0001B8                     
  1462                           ;game.c: 121: 
  1463   0001B8  0E03               	movlw	3
  1464   0001BA  0100               	movlb	0	; () banked
  1465   0001BC  6FA1               	movwf	(??_L_ISR+1)& (0+255),b
  1466   0001BE  0E8A               	movlw	138
  1467   0001C0  6FA0               	movwf	??_L_ISR& (0+255),b
  1468   0001C2  0E55               	movlw	85
  1469   0001C4                     i1u154_27:
  1470   0001C4  2EE8               	decfsz	wreg,f,c
  1471   0001C6  D7FE               	bra	i1u154_27
  1472   0001C8  2FA0               	decfsz	??_L_ISR& (0+255),f,b
  1473   0001CA  D7FC               	bra	i1u154_27
  1474   0001CC  2FA1               	decfsz	(??_L_ISR+1)& (0+255),f,b
  1475   0001CE  D7FA               	bra	i1u154_27
  1476   0001D0  D000               	nop2	
  1477   0001D2  EF06  F001         	goto	i1l1924
  1478   0001D6                     i1l1920:
  1479   0001D6  BE4D               	btfsc	(_score+1)^0,7,c
  1480   0001D8  EFF7  F000         	goto	i1u149_21
  1481   0001DC  504D               	movf	(_score+1)^0,w,c
  1482   0001DE  E109               	bnz	i1u149_20
  1483   0001E0  0E0A               	movlw	10
  1484   0001E2  5C4C               	subwf	_score^0,w,c
  1485   0001E4  A0D8               	btfss	status,0,c
  1486   0001E6  EFF7  F000         	goto	i1u149_21
  1487   0001EA  EFF9  F000         	goto	i1u149_20
  1488   0001EE                     i1u149_21:
  1489   0001EE  EF06  F001         	goto	i1l1924
  1490   0001F2                     i1u149_20:
  1491   0001F2                     
  1492                           ;game.c: 123: 
  1493   0001F2  0E04               	movlw	4
  1494   0001F4  0100               	movlb	0	; () banked
  1495   0001F6  6FA1               	movwf	(??_L_ISR+1)& (0+255),b
  1496   0001F8  0E2C               	movlw	44
  1497   0001FA  6FA0               	movwf	??_L_ISR& (0+255),b
  1498   0001FC  0EAB               	movlw	171
  1499   0001FE                     i1u155_27:
  1500   0001FE  2EE8               	decfsz	wreg,f,c
  1501   000200  D7FE               	bra	i1u155_27
  1502   000202  2FA0               	decfsz	??_L_ISR& (0+255),f,b
  1503   000204  D7FC               	bra	i1u155_27
  1504   000206  2FA1               	decfsz	(??_L_ISR+1)& (0+255),f,b
  1505   000208  D7FA               	bra	i1u155_27
  1506   00020A  D000               	nop2	
  1507   00020C                     i1l1924:
  1508                           
  1509                           ;game.c: 127:     TMR0L = 0xB0;
  1510   00020C  94F2               	bcf	4082,2,c	;volatile
  1511   00020E                     
  1512                           ;game.c: 128: 
  1513   00020E  0EF0               	movlw	240
  1514   000210  6ED7               	movwf	215,c	;volatile
  1515   000212                     
  1516                           ;game.c: 129:     UART_Initialize();
  1517   000212  0EB0               	movlw	176
  1518   000214  6ED6               	movwf	214,c	;volatile
  1519   000216                     
  1520                           ;game.c: 130: 
  1521   000216  8ED5               	bsf	213,7,c	;volatile
  1522   000218                     i1l123:
  1523   000218  C0AA  FFF5         	movff	??_L_ISR+10,tablat
  1524   00021C  C0A9  FFF8         	movff	??_L_ISR+9,tblptru
  1525   000220  C0A8  FFF7         	movff	??_L_ISR+8,tblptrh
  1526   000224  C0A7  FFF6         	movff	??_L_ISR+7,tblptrl
  1527   000228  C0A6  FFDA         	movff	??_L_ISR+6,fsr2h
  1528   00022C  C0A5  FFD9         	movff	??_L_ISR+5,fsr2l
  1529   000230  C0A4  FFE0         	movff	??_L_ISR+4,bsr
  1530   000234  C0A3  FFE8         	movff	??_L_ISR+3,wreg
  1531   000238  C0A2  FFD8         	movff	??_L_ISR+2,status
  1532   00023C  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1533   00023E  0010               	retfie	
  1534   000240                     __end_of_L_ISR:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function i1_motor_angle *****************
  1538 ;; Defined at:
  1539 ;;		line 40 in file "game.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  number          2   28[COMRAM] int 
  1542 ;;  state           2   30[COMRAM] int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1554 ;;      Params:         4       0       0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0
  1557 ;;      Totals:         4       0       0       0       0       0       0
  1558 ;;Total ram usage:        4 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 3
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_L_ISR
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text8
  1569   000EAA                     __ptext8:
  1570                           	callstack 0
  1571   000EAA                     i1_motor_angle:
  1572                           	callstack 24
  1573   000EAA                     
  1574                           ;game.c: 41:             CCP2CONbits.DC2B = 0b00;
  1575   000EAA  501D               	movf	i1motor_angle@number^0,w,c
  1576   000EAC  101E               	iorwf	(i1motor_angle@number+1)^0,w,c
  1577   000EAE  A4D8               	btfss	status,2,c
  1578   000EB0  EF5C  F007         	goto	i1u114_21
  1579   000EB4  EF5E  F007         	goto	i1u114_20
  1580   000EB8                     i1u114_21:
  1581   000EB8  EF73  F007         	goto	i1l1644
  1582   000EBC                     i1u114_20:
  1583   000EBC                     
  1584                           ;game.c: 42:         }
  1585   000EBC  501F               	movf	i1motor_angle@state^0,w,c
  1586   000EBE  1020               	iorwf	(i1motor_angle@state+1)^0,w,c
  1587   000EC0  A4D8               	btfss	status,2,c
  1588   000EC2  EF65  F007         	goto	i1u115_21
  1589   000EC6  EF67  F007         	goto	i1u115_20
  1590   000ECA                     i1u115_21:
  1591   000ECA  EF6F  F007         	goto	i1l1642
  1592   000ECE                     i1u115_20:
  1593   000ECE                     
  1594                           ;game.c: 43:     }
  1595   000ECE  0E78               	movlw	120
  1596   000ED0  6EBE               	movwf	190,c	;volatile
  1597                           
  1598                           ;game.c: 44:     return;
  1599   000ED2  50BD               	movf	189,w,c	;volatile
  1600   000ED4  0BCF               	andlw	-49
  1601   000ED6  0910               	iorlw	16
  1602   000ED8  6EBD               	movwf	189,c	;volatile
  1603                           
  1604                           ;game.c: 45: }
  1605   000EDA  EF73  F007         	goto	i1l1644
  1606   000EDE                     i1l1642:
  1607                           
  1608                           ;game.c: 47: void __attribute__((picinterrupt(("high_priority"))))H_ISR(){
  1609   000EDE  0E3D               	movlw	61
  1610   000EE0  6EBE               	movwf	190,c	;volatile
  1611                           
  1612                           ;game.c: 48:     if(INTCONbits.INT0IF == 1 || INTCON3bits.INT1IF == 1){
  1613   000EE2  0ECF               	movlw	-49
  1614   000EE4  16BD               	andwf	189,f,c	;volatile
  1615   000EE6                     i1l1644:
  1616                           
  1617                           ;game.c: 51:             check_0 = 1;
  1618   000EE6  041D               	decf	i1motor_angle@number^0,w,c
  1619   000EE8  101E               	iorwf	(i1motor_angle@number+1)^0,w,c
  1620   000EEA  A4D8               	btfss	status,2,c
  1621   000EEC  EF7A  F007         	goto	i1u116_21
  1622   000EF0  EF7C  F007         	goto	i1u116_20
  1623   000EF4                     i1u116_21:
  1624   000EF4  EF91  F007         	goto	i1l95
  1625   000EF8                     i1u116_20:
  1626   000EF8                     
  1627                           ;game.c: 52:         }
  1628   000EF8  501F               	movf	i1motor_angle@state^0,w,c
  1629   000EFA  1020               	iorwf	(i1motor_angle@state+1)^0,w,c
  1630   000EFC  A4D8               	btfss	status,2,c
  1631   000EFE  EF83  F007         	goto	i1u117_21
  1632   000F02  EF85  F007         	goto	i1u117_20
  1633   000F06                     i1u117_21:
  1634   000F06  EF8D  F007         	goto	i1l1650
  1635   000F0A                     i1u117_20:
  1636   000F0A                     
  1637                           ;game.c: 53:         if(INTCON3bits.INT1IF == 1){
  1638   000F0A  0E78               	movlw	120
  1639   000F0C  6EBB               	movwf	187,c	;volatile
  1640                           
  1641                           ;game.c: 54:             LATAbits.LA1 = 1;
  1642   000F0E  50BA               	movf	186,w,c	;volatile
  1643   000F10  0BCF               	andlw	-49
  1644   000F12  0910               	iorlw	16
  1645   000F14  6EBA               	movwf	186,c	;volatile
  1646                           
  1647                           ;game.c: 55:             check_1 = 1;
  1648   000F16  EF91  F007         	goto	i1l95
  1649   000F1A                     i1l1650:
  1650                           
  1651                           ;game.c: 57:         if((motor_num==0&&check_0==1) || (motor_num==1&&check_1==1)){
  1652   000F1A  0E3D               	movlw	61
  1653   000F1C  6EBB               	movwf	187,c	;volatile
  1654                           
  1655                           ;game.c: 58:             LATAbits.LA4 = 1;
  1656   000F1E  0ECF               	movlw	-49
  1657   000F20  16BA               	andwf	186,f,c	;volatile
  1658   000F22                     i1l95:
  1659   000F22  0012               	return		;funcret
  1660   000F24                     __end_ofi1_motor_angle:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function i1_UART_Write_Text *****************
  1664 ;; Defined at:
  1665 ;;		line 27 in file "uart.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  text            2   59[COMRAM] PTR unsigned char 
  1668 ;;		 -> STR_4(9), STR_3(9), STR_2(9), itoa@buf(32), 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  i               2   63[COMRAM] int 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1680 ;;      Params:         2       0       0       0       0       0       0
  1681 ;;      Locals:         2       0       0       0       0       0       0
  1682 ;;      Temps:          2       0       0       0       0       0       0
  1683 ;;      Totals:         6       0       0       0       0       0       0
  1684 ;;Total ram usage:        6 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 4
  1687 ;; This function calls:
  1688 ;;		i1_UART_Write
  1689 ;; This function is called by:
  1690 ;;		_L_ISR
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text9
  1695   000D32                     __ptext9:
  1696                           	callstack 0
  1697   000D32                     i1_UART_Write_Text:
  1698                           	callstack 23
  1699   000D32                     
  1700                           ;uart.c: 28:     for(int i=0;text[i]!='\0';i++)
  1701   000D32  0E00               	movlw	0
  1702   000D34  6E41               	movwf	(i1UART_Write_Text@i+1)^0,c
  1703   000D36  0E00               	movlw	0
  1704   000D38  6E40               	movwf	i1UART_Write_Text@i^0,c
  1705   000D3A  EFB9  F006         	goto	i1l1678
  1706   000D3E                     i1l1674:
  1707                           
  1708                           ;uart.c: 29:         UART_Write(text[i]);
  1709   000D3E  5040               	movf	i1UART_Write_Text@i^0,w,c
  1710   000D40  243C               	addwf	i1UART_Write_Text@text^0,w,c
  1711   000D42  6E3E               	movwf	??i1_UART_Write_Text^0,c
  1712   000D44  5041               	movf	(i1UART_Write_Text@i+1)^0,w,c
  1713   000D46  203D               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  1714   000D48  6E3F               	movwf	(??i1_UART_Write_Text+1)^0,c
  1715   000D4A  C03E  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  1716   000D4E  C03F  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  1717   000D52  6AF8               	clrf	tblptru,c
  1718   000D54  0E05               	movlw	(high __ramtop+-1)
  1719   000D56  64F7               	cpfsgt	tblptrh,c
  1720   000D58  D003               	bra	i1u122_27
  1721   000D5A  0008               	tblrd		*
  1722   000D5C  50F5               	movf	tablat,w,c
  1723   000D5E  D005               	bra	i1u122_20
  1724   000D60                     i1u122_27:
  1725   000D60  CFF6 FFD9          	movff	tblptrl,fsr2l
  1726   000D64  CFF7 FFDA          	movff	tblptrh,fsr2h
  1727   000D68  50DF               	movf	indf2,w,c
  1728   000D6A                     i1u122_20:
  1729   000D6A  EC9E  F008         	call	i1_UART_Write
  1730   000D6E  4A40               	infsnz	i1UART_Write_Text@i^0,f,c
  1731   000D70  2A41               	incf	(i1UART_Write_Text@i+1)^0,f,c
  1732   000D72                     i1l1678:
  1733   000D72  5040               	movf	i1UART_Write_Text@i^0,w,c
  1734   000D74  243C               	addwf	i1UART_Write_Text@text^0,w,c
  1735   000D76  6E3E               	movwf	??i1_UART_Write_Text^0,c
  1736   000D78  5041               	movf	(i1UART_Write_Text@i+1)^0,w,c
  1737   000D7A  203D               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  1738   000D7C  6E3F               	movwf	(??i1_UART_Write_Text+1)^0,c
  1739   000D7E  C03E  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  1740   000D82  C03F  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  1741   000D86  6AF8               	clrf	tblptru,c
  1742   000D88  0E05               	movlw	(high __ramtop+-1)
  1743   000D8A  64F7               	cpfsgt	tblptrh,c
  1744   000D8C  D003               	bra	i1u123_27
  1745   000D8E  0008               	tblrd		*
  1746   000D90  50F5               	movf	tablat,w,c
  1747   000D92  D005               	bra	i1u123_20
  1748   000D94                     i1u123_27:
  1749   000D94  CFF6 FFD9          	movff	tblptrl,fsr2l
  1750   000D98  CFF7 FFDA          	movff	tblptrh,fsr2h
  1751   000D9C  50DF               	movf	indf2,w,c
  1752   000D9E                     i1u123_20:
  1753   000D9E  0900               	iorlw	0
  1754   000DA0  A4D8               	btfss	status,2,c
  1755   000DA2  EFD5  F006         	goto	i1u124_21
  1756   000DA6  EFD7  F006         	goto	i1u124_20
  1757   000DAA                     i1u124_21:
  1758   000DAA  EF9F  F006         	goto	i1l1674
  1759   000DAE                     i1u124_20:
  1760   000DAE  0012               	return		;funcret
  1761   000DB0                     __end_ofi1_UART_Write_Text:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function i1_UART_Write *****************
  1765 ;; Defined at:
  1766 ;;		line 20 in file "uart.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  data            1    wreg     unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  data            1   28[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1780 ;;      Params:         0       0       0       0       0       0       0
  1781 ;;      Locals:         1       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0
  1783 ;;      Totals:         1       0       0       0       0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 3
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_L_ISR
  1791 ;;		i1_UART_Write_Text
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text10
  1796   00113C                     __ptext10:
  1797                           	callstack 0
  1798   00113C                     i1_UART_Write:
  1799                           	callstack 23
  1800                           
  1801                           ;incstack = 0
  1802                           ;i1UART_Write@data stored from wreg
  1803   00113C  6E1D               	movwf	i1UART_Write@data^0,c
  1804   00113E                     i1l151:
  1805   00113E  A2AC               	btfss	172,1,c	;volatile
  1806   001140  EFA4  F008         	goto	i1u87_21
  1807   001144  EFA6  F008         	goto	i1u87_20
  1808   001148                     i1u87_21:
  1809   001148  EF9F  F008         	goto	i1l151
  1810   00114C                     i1u87_20:
  1811   00114C                     
  1812                           ;uart.c: 23:     TXREG = data;
  1813   00114C  C01D  FFAD         	movff	i1UART_Write@data,4013	;volatile
  1814   001150  0012               	return		;funcret
  1815   001152                     __end_ofi1_UART_Write:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _rand *****************
  1819 ;; Defined at:
  1820 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\rand.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2   40[COMRAM] int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         2       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0
  1836 ;;      Temps:          4       0       0       0       0       0       0
  1837 ;;      Totals:         6       0       0       0       0       0       0
  1838 ;;Total ram usage:        6 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 4
  1841 ;; This function calls:
  1842 ;;		___lmul
  1843 ;; This function is called by:
  1844 ;;		_L_ISR
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text11
  1849   000F9E                     __ptext11:
  1850                           	callstack 0
  1851   000F9E                     _rand:
  1852                           	callstack 23
  1853   000F9E  C054  F01D         	movff	_seed,___lmul@multiplier
  1854   000FA2  C055  F01E         	movff	_seed+1,___lmul@multiplier+1
  1855   000FA6  C056  F01F         	movff	_seed+2,___lmul@multiplier+2
  1856   000FAA  C057  F020         	movff	_seed+3,___lmul@multiplier+3
  1857   000FAE  0E2D               	movlw	45
  1858   000FB0  6E21               	movwf	___lmul@multiplicand^0,c
  1859   000FB2  0E7F               	movlw	127
  1860   000FB4  6E22               	movwf	(___lmul@multiplicand+1)^0,c
  1861   000FB6  0E95               	movlw	149
  1862   000FB8  6E23               	movwf	(___lmul@multiplicand+2)^0,c
  1863   000FBA  0E4C               	movlw	76
  1864   000FBC  6E24               	movwf	(___lmul@multiplicand+3)^0,c
  1865   000FBE  EC05  F008         	call	___lmul	;wreg free
  1866   000FC2  0E01               	movlw	1
  1867   000FC4  241D               	addwf	?___lmul^0,w,c
  1868   000FC6  6E54               	movwf	_seed^0,c
  1869   000FC8  0E00               	movlw	0
  1870   000FCA  201E               	addwfc	(?___lmul+1)^0,w,c
  1871   000FCC  6E55               	movwf	(_seed+1)^0,c
  1872   000FCE  0E00               	movlw	0
  1873   000FD0  201F               	addwfc	(?___lmul+2)^0,w,c
  1874   000FD2  6E56               	movwf	(_seed+2)^0,c
  1875   000FD4  0E00               	movlw	0
  1876   000FD6  2020               	addwfc	(?___lmul+3)^0,w,c
  1877   000FD8  6E57               	movwf	(_seed+3)^0,c
  1878   000FDA  C054  F02B         	movff	_seed,??_rand
  1879   000FDE  C055  F02C         	movff	_seed+1,??_rand+1
  1880   000FE2  C056  F02D         	movff	_seed+2,??_rand+2
  1881   000FE6  C057  F02E         	movff	_seed+3,??_rand+3
  1882   000FEA  0E12               	movlw	18
  1883   000FEC  EFFD  F007         	goto	i1u110_20
  1884   000FF0                     i1u110_25:
  1885   000FF0  90D8               	bcf	status,0,c
  1886   000FF2  322E               	rrcf	(??_rand+3)^0,f,c
  1887   000FF4  322D               	rrcf	(??_rand+2)^0,f,c
  1888   000FF6  322C               	rrcf	(??_rand+1)^0,f,c
  1889   000FF8  322B               	rrcf	??_rand^0,f,c
  1890   000FFA                     i1u110_20:
  1891   000FFA  2EE8               	decfsz	wreg,f,c
  1892   000FFC  EFF8  F007         	goto	i1u110_25
  1893   001000  C02B  F029         	movff	??_rand,?_rand
  1894   001004  C02C  F02A         	movff	??_rand+1,?_rand+1
  1895   001008  0012               	return		;funcret
  1896   00100A                     __end_of_rand:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function ___lmul *****************
  1900 ;; Defined at:
  1901 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  multiplier      4   28[COMRAM] unsigned long 
  1904 ;;  multiplicand    4   32[COMRAM] unsigned long 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  product         4   36[COMRAM] unsigned long 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  4   28[COMRAM] unsigned long 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         8       0       0       0       0       0       0
  1917 ;;      Locals:         4       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0
  1919 ;;      Totals:        12       0       0       0       0       0       0
  1920 ;;Total ram usage:       12 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 3
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_rand
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text12
  1931   00100A                     __ptext12:
  1932                           	callstack 0
  1933   00100A                     ___lmul:
  1934                           	callstack 23
  1935   00100A  0E00               	movlw	0
  1936   00100C  6E25               	movwf	___lmul@product^0,c
  1937   00100E  0E00               	movlw	0
  1938   001010  6E26               	movwf	(___lmul@product+1)^0,c
  1939   001012  0E00               	movlw	0
  1940   001014  6E27               	movwf	(___lmul@product+2)^0,c
  1941   001016  0E00               	movlw	0
  1942   001018  6E28               	movwf	(___lmul@product+3)^0,c
  1943   00101A                     i1l1372:
  1944   00101A  A01D               	btfss	___lmul@multiplier^0,0,c
  1945   00101C  EF12  F008         	goto	i1u73_21
  1946   001020  EF14  F008         	goto	i1u73_20
  1947   001024                     i1u73_21:
  1948   001024  EF1C  F008         	goto	i1l1376
  1949   001028                     i1u73_20:
  1950   001028  5021               	movf	___lmul@multiplicand^0,w,c
  1951   00102A  2625               	addwf	___lmul@product^0,f,c
  1952   00102C  5022               	movf	(___lmul@multiplicand+1)^0,w,c
  1953   00102E  2226               	addwfc	(___lmul@product+1)^0,f,c
  1954   001030  5023               	movf	(___lmul@multiplicand+2)^0,w,c
  1955   001032  2227               	addwfc	(___lmul@product+2)^0,f,c
  1956   001034  5024               	movf	(___lmul@multiplicand+3)^0,w,c
  1957   001036  2228               	addwfc	(___lmul@product+3)^0,f,c
  1958   001038                     i1l1376:
  1959   001038  90D8               	bcf	status,0,c
  1960   00103A  3621               	rlcf	___lmul@multiplicand^0,f,c
  1961   00103C  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1962   00103E  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1963   001040  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1964   001042  90D8               	bcf	status,0,c
  1965   001044  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
  1966   001046  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
  1967   001048  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
  1968   00104A  321D               	rrcf	___lmul@multiplier^0,f,c
  1969   00104C  501D               	movf	___lmul@multiplier^0,w,c
  1970   00104E  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
  1971   001050  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
  1972   001052  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
  1973   001054  A4D8               	btfss	status,2,c
  1974   001056  EF2F  F008         	goto	i1u74_21
  1975   00105A  EF31  F008         	goto	i1u74_20
  1976   00105E                     i1u74_21:
  1977   00105E  EF0D  F008         	goto	i1l1372
  1978   001062                     i1u74_20:
  1979   001062  C025  F01D         	movff	___lmul@product,?___lmul
  1980   001066  C026  F01E         	movff	___lmul@product+1,?___lmul+1
  1981   00106A  C027  F01F         	movff	___lmul@product+2,?___lmul+2
  1982   00106E  C028  F020         	movff	___lmul@product+3,?___lmul+3
  1983   001072  0012               	return		;funcret
  1984   001074                     __end_of___lmul:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _itoa *****************
  1988 ;; Defined at:
  1989 ;;		line 26 in file "game.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  val             2   52[COMRAM] int 
  1992 ;;  base            2   54[COMRAM] int 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  i               2   57[COMRAM] int 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      PTR unsigned char 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2004 ;;      Params:         4       0       0       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0       0       0
  2007 ;;      Totals:         7       0       0       0       0       0       0
  2008 ;;Total ram usage:        7 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 4
  2011 ;; This function calls:
  2012 ;;		___awdiv
  2013 ;;		___awmod
  2014 ;; This function is called by:
  2015 ;;		_L_ISR
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text13
  2020   000B9E                     __ptext13:
  2021                           	callstack 0
  2022   000B9E                     _itoa:
  2023                           	callstack 23
  2024   000B9E                     
  2025                           ;game.c: 28:         };game.c: 30:             CCPR1L = 0x3d;
  2026   000B9E  0E00               	movlw	0
  2027   000BA0  6E3B               	movwf	(itoa@i+1)^0,c
  2028   000BA2  0E1E               	movlw	30
  2029   000BA4  6E3A               	movwf	itoa@i^0,c
  2030                           
  2031                           ;game.c: 32:         }
  2032   000BA6  EFFE  F005         	goto	i1l1556
  2033   000BAA                     i1l1550:
  2034                           
  2035                           ;game.c: 34:     if(number==1){
  2036   000BAA  C035  F02F         	movff	itoa@val,___awmod@dividend
  2037   000BAE  C036  F030         	movff	itoa@val+1,___awmod@dividend+1
  2038   000BB2  C037  F031         	movff	itoa@base,___awmod@divisor
  2039   000BB6  C038  F032         	movff	itoa@base+1,___awmod@divisor+1
  2040   000BBA  EC1F  F005         	call	___awmod	;wreg free
  2041   000BBE  502F               	movf	?___awmod^0,w,c
  2042   000BC0  0F01               	addlw	low STR_1
  2043   000BC2  6E39               	movwf	??_itoa^0,c
  2044   000BC4  C039  FFF6         	movff	??_itoa,tblptrl
  2045   000BC8                     	if	1	;There is more than 1 active tblptr byte
  2046   000BC8  0E06               	movlw	high __smallconst
  2047   000BCA  6EF7               	movwf	tblptrh,c
  2048   000BCC                     	endif
  2049   000BCC                     	if	0	;tblptru may be non-zero
  2050   000BCC                     	endif
  2051   000BCC                     	if	0	;tblptru may be non-zero
  2052   000BCC                     	endif
  2053   000BCC  503A               	movf	itoa@i^0,w,c
  2054   000BCE  0F80               	addlw	low itoa@buf
  2055   000BD0  6ED9               	movwf	fsr2l,c
  2056   000BD2  6ADA               	clrf	fsr2h,c
  2057   000BD4  0008               	tblrd		*
  2058   000BD6  CFF5 FFDF          	movff	tablat,indf2
  2059   000BDA  063A               	decf	itoa@i^0,f,c
  2060   000BDC  A0D8               	btfss	status,0,c
  2061   000BDE  063B               	decf	(itoa@i+1)^0,f,c
  2062   000BE0  C035  F01D         	movff	itoa@val,___awdiv@dividend
  2063   000BE4  C036  F01E         	movff	itoa@val+1,___awdiv@dividend+1
  2064   000BE8  C037  F01F         	movff	itoa@base,___awdiv@divisor
  2065   000BEC  C038  F020         	movff	itoa@base+1,___awdiv@divisor+1
  2066   000BF0  EC5B  F004         	call	___awdiv	;wreg free
  2067   000BF4  C01D  F035         	movff	?___awdiv,itoa@val
  2068   000BF8  C01E  F036         	movff	?___awdiv+1,itoa@val+1
  2069   000BFC                     i1l1556:
  2070   000BFC  5035               	movf	itoa@val^0,w,c
  2071   000BFE  1036               	iorwf	(itoa@val+1)^0,w,c
  2072   000C00  B4D8               	btfsc	status,2,c
  2073   000C02  EF05  F006         	goto	i1u101_21
  2074   000C06  EF07  F006         	goto	i1u101_20
  2075   000C0A                     i1u101_21:
  2076   000C0A  EF10  F006         	goto	i1l1560
  2077   000C0E                     i1u101_20:
  2078   000C0E  503A               	movf	itoa@i^0,w,c
  2079   000C10  103B               	iorwf	(itoa@i+1)^0,w,c
  2080   000C12  A4D8               	btfss	status,2,c
  2081   000C14  EF0E  F006         	goto	i1u102_21
  2082   000C18  EF10  F006         	goto	i1u102_20
  2083   000C1C                     i1u102_21:
  2084   000C1C  EFD5  F005         	goto	i1l1550
  2085   000C20                     i1u102_20:
  2086   000C20                     i1l1560:
  2087                           
  2088                           ;game.c: 36:             CCPR2L = 0x78;
  2089   000C20  503A               	movf	itoa@i^0,w,c
  2090   000C22  0F81               	addlw	low (itoa@buf+1)
  2091   000C24  0012               	return		;funcret
  2092   000C26                     __end_of_itoa:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function ___awmod *****************
  2096 ;; Defined at:
  2097 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  dividend        2   46[COMRAM] int 
  2100 ;;  divisor         2   48[COMRAM] int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  sign            1   51[COMRAM] unsigned char 
  2103 ;;  counter         1   50[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   46[COMRAM] int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2113 ;;      Params:         4       0       0       0       0       0       0
  2114 ;;      Locals:         2       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0
  2116 ;;      Totals:         6       0       0       0       0       0       0
  2117 ;;Total ram usage:        6 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 3
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_itoa
  2124 ;;		_L_ISR
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text14
  2129   000A3E                     __ptext14:
  2130                           	callstack 0
  2131   000A3E                     ___awmod:
  2132                           	callstack 23
  2133   000A3E  0E00               	movlw	0
  2134   000A40  6E34               	movwf	___awmod@sign^0,c
  2135   000A42  BE30               	btfsc	(___awmod@dividend+1)^0,7,c
  2136   000A44  EF28  F005         	goto	i1u81_20
  2137   000A48  EF26  F005         	goto	i1u81_21
  2138   000A4C                     i1u81_21:
  2139   000A4C  EF2E  F005         	goto	i1l1432
  2140   000A50                     i1u81_20:
  2141   000A50  6C2F               	negf	___awmod@dividend^0,c
  2142   000A52  1E30               	comf	(___awmod@dividend+1)^0,f,c
  2143   000A54  B0D8               	btfsc	status,0,c
  2144   000A56  2A30               	incf	(___awmod@dividend+1)^0,f,c
  2145   000A58  0E01               	movlw	1
  2146   000A5A  6E34               	movwf	___awmod@sign^0,c
  2147   000A5C                     i1l1432:
  2148   000A5C  BE32               	btfsc	(___awmod@divisor+1)^0,7,c
  2149   000A5E  EF35  F005         	goto	i1u82_20
  2150   000A62  EF33  F005         	goto	i1u82_21
  2151   000A66                     i1u82_21:
  2152   000A66  EF39  F005         	goto	i1l1436
  2153   000A6A                     i1u82_20:
  2154   000A6A  6C31               	negf	___awmod@divisor^0,c
  2155   000A6C  1E32               	comf	(___awmod@divisor+1)^0,f,c
  2156   000A6E  B0D8               	btfsc	status,0,c
  2157   000A70  2A32               	incf	(___awmod@divisor+1)^0,f,c
  2158   000A72                     i1l1436:
  2159   000A72  5031               	movf	___awmod@divisor^0,w,c
  2160   000A74  1032               	iorwf	(___awmod@divisor+1)^0,w,c
  2161   000A76  B4D8               	btfsc	status,2,c
  2162   000A78  EF40  F005         	goto	i1u83_21
  2163   000A7C  EF42  F005         	goto	i1u83_20
  2164   000A80                     i1u83_21:
  2165   000A80  EF66  F005         	goto	i1l1452
  2166   000A84                     i1u83_20:
  2167   000A84  0E01               	movlw	1
  2168   000A86  6E33               	movwf	___awmod@counter^0,c
  2169   000A88  EF4A  F005         	goto	i1l1442
  2170   000A8C                     i1l1440:
  2171   000A8C  90D8               	bcf	status,0,c
  2172   000A8E  3631               	rlcf	___awmod@divisor^0,f,c
  2173   000A90  3632               	rlcf	(___awmod@divisor+1)^0,f,c
  2174   000A92  2A33               	incf	___awmod@counter^0,f,c
  2175   000A94                     i1l1442:
  2176   000A94  AE32               	btfss	(___awmod@divisor+1)^0,7,c
  2177   000A96  EF4F  F005         	goto	i1u84_21
  2178   000A9A  EF51  F005         	goto	i1u84_20
  2179   000A9E                     i1u84_21:
  2180   000A9E  EF46  F005         	goto	i1l1440
  2181   000AA2                     i1u84_20:
  2182   000AA2                     i1l1444:
  2183   000AA2  5031               	movf	___awmod@divisor^0,w,c
  2184   000AA4  5C2F               	subwf	___awmod@dividend^0,w,c
  2185   000AA6  5032               	movf	(___awmod@divisor+1)^0,w,c
  2186   000AA8  5830               	subwfb	(___awmod@dividend+1)^0,w,c
  2187   000AAA  A0D8               	btfss	status,0,c
  2188   000AAC  EF5A  F005         	goto	i1u85_21
  2189   000AB0  EF5C  F005         	goto	i1u85_20
  2190   000AB4                     i1u85_21:
  2191   000AB4  EF60  F005         	goto	i1l1448
  2192   000AB8                     i1u85_20:
  2193   000AB8  5031               	movf	___awmod@divisor^0,w,c
  2194   000ABA  5E2F               	subwf	___awmod@dividend^0,f,c
  2195   000ABC  5032               	movf	(___awmod@divisor+1)^0,w,c
  2196   000ABE  5A30               	subwfb	(___awmod@dividend+1)^0,f,c
  2197   000AC0                     i1l1448:
  2198   000AC0  90D8               	bcf	status,0,c
  2199   000AC2  3232               	rrcf	(___awmod@divisor+1)^0,f,c
  2200   000AC4  3231               	rrcf	___awmod@divisor^0,f,c
  2201   000AC6  2E33               	decfsz	___awmod@counter^0,f,c
  2202   000AC8  EF51  F005         	goto	i1l1444
  2203   000ACC                     i1l1452:
  2204   000ACC  5034               	movf	___awmod@sign^0,w,c
  2205   000ACE  B4D8               	btfsc	status,2,c
  2206   000AD0  EF6C  F005         	goto	i1u86_21
  2207   000AD4  EF6E  F005         	goto	i1u86_20
  2208   000AD8                     i1u86_21:
  2209   000AD8  EF72  F005         	goto	i1l1456
  2210   000ADC                     i1u86_20:
  2211   000ADC  6C2F               	negf	___awmod@dividend^0,c
  2212   000ADE  1E30               	comf	(___awmod@dividend+1)^0,f,c
  2213   000AE0  B0D8               	btfsc	status,0,c
  2214   000AE2  2A30               	incf	(___awmod@dividend+1)^0,f,c
  2215   000AE4                     i1l1456:
  2216   000AE4  C02F  F02F         	movff	___awmod@dividend,?___awmod
  2217   000AE8  C030  F030         	movff	___awmod@dividend+1,?___awmod+1
  2218   000AEC  0012               	return		;funcret
  2219   000AEE                     __end_of___awmod:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function ___awdiv *****************
  2223 ;; Defined at:
  2224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  dividend        2   28[COMRAM] int 
  2227 ;;  divisor         2   30[COMRAM] int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  quotient        2   34[COMRAM] int 
  2230 ;;  sign            1   33[COMRAM] unsigned char 
  2231 ;;  counter         1   32[COMRAM] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2   28[COMRAM] int 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2241 ;;      Params:         4       0       0       0       0       0       0
  2242 ;;      Locals:         4       0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0
  2244 ;;      Totals:         8       0       0       0       0       0       0
  2245 ;;Total ram usage:        8 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 3
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_itoa
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text15
  2256   0008B6                     __ptext15:
  2257                           	callstack 0
  2258   0008B6                     ___awdiv:
  2259                           	callstack 23
  2260   0008B6  0E00               	movlw	0
  2261   0008B8  6E22               	movwf	___awdiv@sign^0,c
  2262   0008BA  BE20               	btfsc	(___awdiv@divisor+1)^0,7,c
  2263   0008BC  EF64  F004         	goto	i1u75_20
  2264   0008C0  EF62  F004         	goto	i1u75_21
  2265   0008C4                     i1u75_21:
  2266   0008C4  EF6A  F004         	goto	i1l1388
  2267   0008C8                     i1u75_20:
  2268   0008C8  6C1F               	negf	___awdiv@divisor^0,c
  2269   0008CA  1E20               	comf	(___awdiv@divisor+1)^0,f,c
  2270   0008CC  B0D8               	btfsc	status,0,c
  2271   0008CE  2A20               	incf	(___awdiv@divisor+1)^0,f,c
  2272   0008D0  0E01               	movlw	1
  2273   0008D2  6E22               	movwf	___awdiv@sign^0,c
  2274   0008D4                     i1l1388:
  2275   0008D4  BE1E               	btfsc	(___awdiv@dividend+1)^0,7,c
  2276   0008D6  EF71  F004         	goto	i1u76_20
  2277   0008DA  EF6F  F004         	goto	i1u76_21
  2278   0008DE                     i1u76_21:
  2279   0008DE  EF77  F004         	goto	i1l1394
  2280   0008E2                     i1u76_20:
  2281   0008E2  6C1D               	negf	___awdiv@dividend^0,c
  2282   0008E4  1E1E               	comf	(___awdiv@dividend+1)^0,f,c
  2283   0008E6  B0D8               	btfsc	status,0,c
  2284   0008E8  2A1E               	incf	(___awdiv@dividend+1)^0,f,c
  2285   0008EA  0E01               	movlw	1
  2286   0008EC  1A22               	xorwf	___awdiv@sign^0,f,c
  2287   0008EE                     i1l1394:
  2288   0008EE  0E00               	movlw	0
  2289   0008F0  6E24               	movwf	(___awdiv@quotient+1)^0,c
  2290   0008F2  0E00               	movlw	0
  2291   0008F4  6E23               	movwf	___awdiv@quotient^0,c
  2292   0008F6  501F               	movf	___awdiv@divisor^0,w,c
  2293   0008F8  1020               	iorwf	(___awdiv@divisor+1)^0,w,c
  2294   0008FA  B4D8               	btfsc	status,2,c
  2295   0008FC  EF82  F004         	goto	i1u77_21
  2296   000900  EF84  F004         	goto	i1u77_20
  2297   000904                     i1u77_21:
  2298   000904  EFAC  F004         	goto	i1l1416
  2299   000908                     i1u77_20:
  2300   000908  0E01               	movlw	1
  2301   00090A  6E21               	movwf	___awdiv@counter^0,c
  2302   00090C  EF8C  F004         	goto	i1l1402
  2303   000910                     i1l1400:
  2304   000910  90D8               	bcf	status,0,c
  2305   000912  361F               	rlcf	___awdiv@divisor^0,f,c
  2306   000914  3620               	rlcf	(___awdiv@divisor+1)^0,f,c
  2307   000916  2A21               	incf	___awdiv@counter^0,f,c
  2308   000918                     i1l1402:
  2309   000918  AE20               	btfss	(___awdiv@divisor+1)^0,7,c
  2310   00091A  EF91  F004         	goto	i1u78_21
  2311   00091E  EF93  F004         	goto	i1u78_20
  2312   000922                     i1u78_21:
  2313   000922  EF88  F004         	goto	i1l1400
  2314   000926                     i1u78_20:
  2315   000926                     i1l1404:
  2316   000926  90D8               	bcf	status,0,c
  2317   000928  3623               	rlcf	___awdiv@quotient^0,f,c
  2318   00092A  3624               	rlcf	(___awdiv@quotient+1)^0,f,c
  2319   00092C  501F               	movf	___awdiv@divisor^0,w,c
  2320   00092E  5C1D               	subwf	___awdiv@dividend^0,w,c
  2321   000930  5020               	movf	(___awdiv@divisor+1)^0,w,c
  2322   000932  581E               	subwfb	(___awdiv@dividend+1)^0,w,c
  2323   000934  A0D8               	btfss	status,0,c
  2324   000936  EF9F  F004         	goto	i1u79_21
  2325   00093A  EFA1  F004         	goto	i1u79_20
  2326   00093E                     i1u79_21:
  2327   00093E  EFA6  F004         	goto	i1l1412
  2328   000942                     i1u79_20:
  2329   000942  501F               	movf	___awdiv@divisor^0,w,c
  2330   000944  5E1D               	subwf	___awdiv@dividend^0,f,c
  2331   000946  5020               	movf	(___awdiv@divisor+1)^0,w,c
  2332   000948  5A1E               	subwfb	(___awdiv@dividend+1)^0,f,c
  2333   00094A  8023               	bsf	___awdiv@quotient^0,0,c
  2334   00094C                     i1l1412:
  2335   00094C  90D8               	bcf	status,0,c
  2336   00094E  3220               	rrcf	(___awdiv@divisor+1)^0,f,c
  2337   000950  321F               	rrcf	___awdiv@divisor^0,f,c
  2338   000952  2E21               	decfsz	___awdiv@counter^0,f,c
  2339   000954  EF93  F004         	goto	i1l1404
  2340   000958                     i1l1416:
  2341   000958  5022               	movf	___awdiv@sign^0,w,c
  2342   00095A  B4D8               	btfsc	status,2,c
  2343   00095C  EFB2  F004         	goto	i1u80_21
  2344   000960  EFB4  F004         	goto	i1u80_20
  2345   000964                     i1u80_21:
  2346   000964  EFB8  F004         	goto	i1l1420
  2347   000968                     i1u80_20:
  2348   000968  6C23               	negf	___awdiv@quotient^0,c
  2349   00096A  1E24               	comf	(___awdiv@quotient+1)^0,f,c
  2350   00096C  B0D8               	btfsc	status,0,c
  2351   00096E  2A24               	incf	(___awdiv@quotient+1)^0,f,c
  2352   000970                     i1l1420:
  2353   000970  C023  F01D         	movff	___awdiv@quotient,?___awdiv
  2354   000974  C024  F01E         	movff	___awdiv@quotient+1,?___awdiv+1
  2355   000978  0012               	return		;funcret
  2356   00097A                     __end_of___awdiv:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _H_ISR *****************
  2360 ;; Defined at:
  2361 ;;		line 64 in file "game.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2375 ;;      Params:         0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0
  2377 ;;      Temps:          7       0       0       0       0       0       0
  2378 ;;      Totals:         7       0       0       0       0       0       0
  2379 ;;Total ram usage:        7 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 2
  2382 ;; This function calls:
  2383 ;;		i2_UART_Write
  2384 ;;		i2_UART_Write_Text
  2385 ;;		i2_itoa
  2386 ;;		i2_motor_angle
  2387 ;; This function is called by:
  2388 ;;		Interrupt level 2
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	intcode
  2393   000008                     __pintcode:
  2394                           	callstack 0
  2395   000008                     _H_ISR:
  2396                           	callstack 23
  2397                           
  2398                           ;incstack = 0
  2399   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2400   00000A  ED0E  F003         	call	int_func,f	;refresh shadow registers
  2401                           
  2402                           	psect	intcode_body
  2403   00061C                     __pintcode_body:
  2404                           	callstack 23
  2405   00061C                     int_func:
  2406                           	callstack 23
  2407   00061C  0006               	pop		; remove dummy address from shadow register refresh
  2408   00061E  CFD9 F017          	movff	fsr2l,??_H_ISR+1
  2409   000622  CFDA F018          	movff	fsr2h,??_H_ISR+2
  2410   000626  CFF6 F019          	movff	tblptrl,??_H_ISR+3
  2411   00062A  CFF7 F01A          	movff	tblptrh,??_H_ISR+4
  2412   00062E  CFF8 F01B          	movff	tblptru,??_H_ISR+5
  2413   000632  CFF5 F01C          	movff	tablat,??_H_ISR+6
  2414   000636                     
  2415                           ;game.c: 65:             _delay((unsigned long)((50)*(1000000/4000.0)));
  2416   000636  B2F2               	btfsc	242,1,c	;volatile
  2417   000638  EF20  F003         	goto	i2u128_41
  2418   00063C  EF22  F003         	goto	i2u128_40
  2419   000640                     i2u128_41:
  2420   000640  EF29  F003         	goto	i2l102
  2421   000644                     i2u128_40:
  2422   000644  A0F0               	btfss	240,0,c	;volatile
  2423   000646  EF27  F003         	goto	i2u129_41
  2424   00064A  EF29  F003         	goto	i2u129_40
  2425   00064E                     i2u129_41:
  2426   00064E  EFCE  F003         	goto	i2l110
  2427   000652                     i2u129_40:
  2428   000652                     i2l102:
  2429                           
  2430                           ;game.c: 66:             score++;
  2431   000652  A2F2               	btfss	242,1,c	;volatile
  2432   000654  EF2E  F003         	goto	i2u130_41
  2433   000658  EF30  F003         	goto	i2u130_40
  2434   00065C                     i2u130_41:
  2435   00065C  EF35  F003         	goto	i2l1696
  2436   000660                     i2u130_40:
  2437   000660                     
  2438                           ;game.c: 67:             UART_Write('\r');
  2439   000660  8089               	bsf	137,0,c	;volatile
  2440   000662                     
  2441                           ;game.c: 68:             UART_Write_Text("Score : ");
  2442   000662  0E00               	movlw	0
  2443   000664  6E53               	movwf	(_check_0+1)^0,c
  2444   000666  0E01               	movlw	1
  2445   000668  6E52               	movwf	_check_0^0,c
  2446   00066A                     i2l1696:
  2447                           
  2448                           ;game.c: 70:         }
  2449   00066A  A0F0               	btfss	240,0,c	;volatile
  2450   00066C  EF3A  F003         	goto	i2u131_41
  2451   000670  EF3C  F003         	goto	i2u131_40
  2452   000674                     i2u131_41:
  2453   000674  EF41  F003         	goto	i2l1702
  2454   000678                     i2u131_40:
  2455   000678                     
  2456                           ;game.c: 71: 
  2457   000678  8289               	bsf	137,1,c	;volatile
  2458   00067A                     
  2459                           ;game.c: 72:         motor_angle(0, 0);
  2460   00067A  0E00               	movlw	0
  2461   00067C  6E51               	movwf	(_check_1+1)^0,c
  2462   00067E  0E01               	movlw	1
  2463   000680  6E50               	movwf	_check_1^0,c
  2464   000682                     i2l1702:
  2465                           
  2466                           ;game.c: 74:         _delay((unsigned long)((500)*(1000000/4000.0)));
  2467   000682  5058               	movf	_motor_num^0,w,c
  2468   000684  1059               	iorwf	(_motor_num+1)^0,w,c
  2469   000686  A4D8               	btfss	status,2,c
  2470   000688  EF48  F003         	goto	i2u132_41
  2471   00068C  EF4A  F003         	goto	i2u132_40
  2472   000690                     i2u132_41:
  2473   000690  EF53  F003         	goto	i2l1706
  2474   000694                     i2u132_40:
  2475   000694  0452               	decf	_check_0^0,w,c
  2476   000696  1053               	iorwf	(_check_0+1)^0,w,c
  2477   000698  B4D8               	btfsc	status,2,c
  2478   00069A  EF51  F003         	goto	i2u133_41
  2479   00069E  EF53  F003         	goto	i2u133_40
  2480   0006A2                     i2u133_41:
  2481   0006A2  EF65  F003         	goto	i2l107
  2482   0006A6                     i2u133_40:
  2483   0006A6                     i2l1706:
  2484   0006A6  0458               	decf	_motor_num^0,w,c
  2485   0006A8  1059               	iorwf	(_motor_num+1)^0,w,c
  2486   0006AA  A4D8               	btfss	status,2,c
  2487   0006AC  EF5A  F003         	goto	i2u134_41
  2488   0006B0  EF5C  F003         	goto	i2u134_40
  2489   0006B4                     i2u134_41:
  2490   0006B4  EFA6  F003         	goto	i2l1726
  2491   0006B8                     i2u134_40:
  2492   0006B8  0450               	decf	_check_1^0,w,c
  2493   0006BA  1051               	iorwf	(_check_1+1)^0,w,c
  2494   0006BC  A4D8               	btfss	status,2,c
  2495   0006BE  EF63  F003         	goto	i2u135_41
  2496   0006C2  EF65  F003         	goto	i2u135_40
  2497   0006C6                     i2u135_41:
  2498   0006C6  EFA6  F003         	goto	i2l1726
  2499   0006CA                     i2u135_40:
  2500   0006CA                     i2l107:
  2501                           
  2502                           ;game.c: 75: 
  2503   0006CA  8889               	bsf	137,4,c	;volatile
  2504   0006CC                     
  2505                           ;game.c: 76:         INTCONbits.INT0IF = 0;
  2506   0006CC  0E11               	movlw	17
  2507   0006CE  6E16               	movwf	??_H_ISR^0,c
  2508   0006D0  0E3A               	movlw	58
  2509   0006D2                     i2u156_47:
  2510   0006D2  2EE8               	decfsz	wreg,f,c
  2511   0006D4  D7FE               	bra	i2u156_47
  2512   0006D6  2E16               	decfsz	??_H_ISR^0,f,c
  2513   0006D8  D7FC               	bra	i2u156_47
  2514   0006DA  D000               	nop2	
  2515   0006DC                     
  2516                           ;game.c: 77:         INTCON3bits.INT1IF = 0;
  2517   0006DC  9889               	bcf	137,4,c	;volatile
  2518                           
  2519                           ;game.c: 78:         LATA = 0;
  2520   0006DE  0E11               	movlw	17
  2521   0006E0  6E16               	movwf	??_H_ISR^0,c
  2522   0006E2  0E3A               	movlw	58
  2523   0006E4                     i2u157_47:
  2524   0006E4  2EE8               	decfsz	wreg,f,c
  2525   0006E6  D7FE               	bra	i2u157_47
  2526   0006E8  2E16               	decfsz	??_H_ISR^0,f,c
  2527   0006EA  D7FC               	bra	i2u157_47
  2528   0006EC  D000               	nop2	
  2529   0006EE                     
  2530                           ;game.c: 79:         check_0 = 0;
  2531   0006EE  8889               	bsf	137,4,c	;volatile
  2532                           
  2533                           ;game.c: 80:         check_1 = 0;
  2534   0006F0  0E11               	movlw	17
  2535   0006F2  6E16               	movwf	??_H_ISR^0,c
  2536   0006F4  0E3A               	movlw	58
  2537   0006F6                     i2u158_47:
  2538   0006F6  2EE8               	decfsz	wreg,f,c
  2539   0006F8  D7FE               	bra	i2u158_47
  2540   0006FA  2E16               	decfsz	??_H_ISR^0,f,c
  2541   0006FC  D7FC               	bra	i2u158_47
  2542   0006FE  D000               	nop2	
  2543   000700                     
  2544                           ;game.c: 81:     }
  2545   000700  9889               	bcf	137,4,c	;volatile
  2546                           
  2547                           ;game.c: 82: 
  2548   000702  0E11               	movlw	17
  2549   000704  6E16               	movwf	??_H_ISR^0,c
  2550   000706  0E3A               	movlw	58
  2551   000708                     i2u159_47:
  2552   000708  2EE8               	decfsz	wreg,f,c
  2553   00070A  D7FE               	bra	i2u159_47
  2554   00070C  2E16               	decfsz	??_H_ISR^0,f,c
  2555   00070E  D7FC               	bra	i2u159_47
  2556   000710  D000               	nop2	
  2557   000712                     
  2558                           ;game.c: 83:     return;
  2559   000712  4A4C               	infsnz	_score^0,f,c
  2560   000714  2A4D               	incf	(_score+1)^0,f,c
  2561   000716                     
  2562                           ;game.c: 84: }
  2563   000716  0E0D               	movlw	13
  2564   000718  ECA9  F008         	call	i2_UART_Write
  2565   00071C                     
  2566                           ;game.c: 85: 
  2567   00071C  0E12               	movlw	low STR_2
  2568   00071E  6E10               	movwf	i2UART_Write_Text@text^0,c
  2569   000720  5010               	movf	i2UART_Write_Text@text^0,w,c
  2570   000722  A4D8               	btfss	status,2,c
  2571   000724  0E06               	movlw	high __smallconst
  2572   000726  6E11               	movwf	(i2UART_Write_Text@text+1)^0,c
  2573   000728  ECD8  F006         	call	i2_UART_Write_Text	;wreg free
  2574   00072C                     
  2575                           ;game.c: 86: void __attribute__((picinterrupt(("low_priority"))))L_ISR(){
  2576   00072C  C04C  F009         	movff	_score,i2itoa@val
  2577   000730  C04D  F00A         	movff	_score+1,i2itoa@val+1
  2578   000734  0E00               	movlw	0
  2579   000736  6E0C               	movwf	(i2itoa@base+1)^0,c
  2580   000738  0E0A               	movlw	10
  2581   00073A  6E0B               	movwf	i2itoa@base^0,c
  2582   00073C  EC13  F006         	call	i2_itoa	;wreg free
  2583   000740  6E16               	movwf	??_H_ISR^0,c
  2584   000742  C016  F010         	movff	??_H_ISR,i2UART_Write_Text@text
  2585   000746  6A11               	clrf	(i2UART_Write_Text@text+1)^0,c
  2586   000748  ECD8  F006         	call	i2_UART_Write_Text	;wreg free
  2587   00074C                     i2l1726:
  2588                           
  2589                           ;game.c: 89:     T0CONbits.TMR0ON = 0;
  2590   00074C  0E00               	movlw	0
  2591   00074E  6E02               	movwf	(i2motor_angle@number+1)^0,c
  2592   000750  0E00               	movlw	0
  2593   000752  6E01               	movwf	i2motor_angle@number^0,c
  2594   000754  0E00               	movlw	0
  2595   000756  6E04               	movwf	(i2motor_angle@state+1)^0,c
  2596   000758  0E00               	movlw	0
  2597   00075A  6E03               	movwf	i2motor_angle@state^0,c
  2598   00075C  EC92  F007         	call	i2_motor_angle	;wreg free
  2599   000760                     
  2600                           ;game.c: 90:     UART_Write('\r');
  2601   000760  0E00               	movlw	0
  2602   000762  6E02               	movwf	(i2motor_angle@number+1)^0,c
  2603   000764  0E01               	movlw	1
  2604   000766  6E01               	movwf	i2motor_angle@number^0,c
  2605   000768  0E00               	movlw	0
  2606   00076A  6E04               	movwf	(i2motor_angle@state+1)^0,c
  2607   00076C  0E00               	movlw	0
  2608   00076E  6E03               	movwf	i2motor_angle@state^0,c
  2609   000770  EC92  F007         	call	i2_motor_angle	;wreg free
  2610   000774                     
  2611                           ;game.c: 91:     UART_Write_Text("Score : ");
  2612   000774  0EA3               	movlw	163
  2613   000776  6E16               	movwf	??_H_ISR^0,c
  2614   000778  0E55               	movlw	85
  2615   00077A                     i2u160_47:
  2616   00077A  2EE8               	decfsz	wreg,f,c
  2617   00077C  D7FE               	bra	i2u160_47
  2618   00077E  2E16               	decfsz	??_H_ISR^0,f,c
  2619   000780  D7FC               	bra	i2u160_47
  2620   000782  0000               	nop	
  2621   000784                     
  2622                           ;game.c: 93:     motor_num = rand()%3;
  2623   000784  92F2               	bcf	242,1,c	;volatile
  2624   000786                     
  2625                           ;game.c: 94:     motor_angle(motor_num, 1);
  2626   000786  90F0               	bcf	240,0,c	;volatile
  2627   000788                     
  2628                           ;game.c: 95:     if(score<5)
  2629   000788  0E00               	movlw	0
  2630   00078A  6E89               	movwf	137,c	;volatile
  2631   00078C                     
  2632                           ;game.c: 96:         _delay((unsigned long)((4000)*(1000000/4000.0)));
  2633   00078C  0E00               	movlw	0
  2634   00078E  6E53               	movwf	(_check_0+1)^0,c
  2635   000790  0E00               	movlw	0
  2636   000792  6E52               	movwf	_check_0^0,c
  2637   000794                     
  2638                           ;game.c: 97:     else if(score>=5&&score<10)
  2639   000794  0E00               	movlw	0
  2640   000796  6E51               	movwf	(_check_1+1)^0,c
  2641   000798  0E00               	movlw	0
  2642   00079A  6E50               	movwf	_check_1^0,c
  2643   00079C                     i2l110:
  2644   00079C  C01C  FFF5         	movff	??_H_ISR+6,tablat
  2645   0007A0  C01B  FFF8         	movff	??_H_ISR+5,tblptru
  2646   0007A4  C01A  FFF7         	movff	??_H_ISR+4,tblptrh
  2647   0007A8  C019  FFF6         	movff	??_H_ISR+3,tblptrl
  2648   0007AC  C018  FFDA         	movff	??_H_ISR+2,fsr2h
  2649   0007B0  C017  FFD9         	movff	??_H_ISR+1,fsr2l
  2650   0007B4  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2651   0007B6  0011               	retfie		f
  2652   0007B8                     __end_of_H_ISR:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function i2_motor_angle *****************
  2656 ;; Defined at:
  2657 ;;		line 40 in file "game.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  number          2    0[COMRAM] int 
  2660 ;;  state           2    2[COMRAM] int 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2672 ;;      Params:         4       0       0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0
  2675 ;;      Totals:         4       0       0       0       0       0       0
  2676 ;;Total ram usage:        4 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_H_ISR
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text17
  2686   000F24                     __ptext17:
  2687                           	callstack 0
  2688   000F24                     i2_motor_angle:
  2689                           	callstack 24
  2690   000F24                     
  2691                           ;game.c: 41:             CCP2CONbits.DC2B = 0b00;
  2692   000F24  5001               	movf	i2motor_angle@number^0,w,c
  2693   000F26  1002               	iorwf	(i2motor_angle@number+1)^0,w,c
  2694   000F28  A4D8               	btfss	status,2,c
  2695   000F2A  EF99  F007         	goto	i2u118_41
  2696   000F2E  EF9B  F007         	goto	i2u118_40
  2697   000F32                     i2u118_41:
  2698   000F32  EFB0  F007         	goto	i2l1662
  2699   000F36                     i2u118_40:
  2700   000F36                     
  2701                           ;game.c: 42:         }
  2702   000F36  5003               	movf	i2motor_angle@state^0,w,c
  2703   000F38  1004               	iorwf	(i2motor_angle@state+1)^0,w,c
  2704   000F3A  A4D8               	btfss	status,2,c
  2705   000F3C  EFA2  F007         	goto	i2u119_41
  2706   000F40  EFA4  F007         	goto	i2u119_40
  2707   000F44                     i2u119_41:
  2708   000F44  EFAC  F007         	goto	i2l1660
  2709   000F48                     i2u119_40:
  2710   000F48                     
  2711                           ;game.c: 43:     }
  2712   000F48  0E78               	movlw	120
  2713   000F4A  6EBE               	movwf	190,c	;volatile
  2714                           
  2715                           ;game.c: 44:     return;
  2716   000F4C  50BD               	movf	189,w,c	;volatile
  2717   000F4E  0BCF               	andlw	-49
  2718   000F50  0910               	iorlw	16
  2719   000F52  6EBD               	movwf	189,c	;volatile
  2720                           
  2721                           ;game.c: 45: }
  2722   000F54  EFB0  F007         	goto	i2l1662
  2723   000F58                     i2l1660:
  2724                           
  2725                           ;game.c: 47: void __attribute__((picinterrupt(("high_priority"))))H_ISR(){
  2726   000F58  0E3D               	movlw	61
  2727   000F5A  6EBE               	movwf	190,c	;volatile
  2728                           
  2729                           ;game.c: 48:     if(INTCONbits.INT0IF == 1 || INTCON3bits.INT1IF == 1){
  2730   000F5C  0ECF               	movlw	-49
  2731   000F5E  16BD               	andwf	189,f,c	;volatile
  2732   000F60                     i2l1662:
  2733                           
  2734                           ;game.c: 51:             check_0 = 1;
  2735   000F60  0401               	decf	i2motor_angle@number^0,w,c
  2736   000F62  1002               	iorwf	(i2motor_angle@number+1)^0,w,c
  2737   000F64  A4D8               	btfss	status,2,c
  2738   000F66  EFB7  F007         	goto	i2u120_41
  2739   000F6A  EFB9  F007         	goto	i2u120_40
  2740   000F6E                     i2u120_41:
  2741   000F6E  EFCE  F007         	goto	i2l95
  2742   000F72                     i2u120_40:
  2743   000F72                     
  2744                           ;game.c: 52:         }
  2745   000F72  5003               	movf	i2motor_angle@state^0,w,c
  2746   000F74  1004               	iorwf	(i2motor_angle@state+1)^0,w,c
  2747   000F76  A4D8               	btfss	status,2,c
  2748   000F78  EFC0  F007         	goto	i2u121_41
  2749   000F7C  EFC2  F007         	goto	i2u121_40
  2750   000F80                     i2u121_41:
  2751   000F80  EFCA  F007         	goto	i2l1668
  2752   000F84                     i2u121_40:
  2753   000F84                     
  2754                           ;game.c: 53:         if(INTCON3bits.INT1IF == 1){
  2755   000F84  0E78               	movlw	120
  2756   000F86  6EBB               	movwf	187,c	;volatile
  2757                           
  2758                           ;game.c: 54:             LATAbits.LA1 = 1;
  2759   000F88  50BA               	movf	186,w,c	;volatile
  2760   000F8A  0BCF               	andlw	-49
  2761   000F8C  0910               	iorlw	16
  2762   000F8E  6EBA               	movwf	186,c	;volatile
  2763                           
  2764                           ;game.c: 55:             check_1 = 1;
  2765   000F90  EFCE  F007         	goto	i2l95
  2766   000F94                     i2l1668:
  2767                           
  2768                           ;game.c: 57:         if((motor_num==0&&check_0==1) || (motor_num==1&&check_1==1)){
  2769   000F94  0E3D               	movlw	61
  2770   000F96  6EBB               	movwf	187,c	;volatile
  2771                           
  2772                           ;game.c: 58:             LATAbits.LA4 = 1;
  2773   000F98  0ECF               	movlw	-49
  2774   000F9A  16BA               	andwf	186,f,c	;volatile
  2775   000F9C                     i2l95:
  2776   000F9C  0012               	return		;funcret
  2777   000F9E                     __end_ofi2_motor_angle:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function i2_itoa *****************
  2781 ;; Defined at:
  2782 ;;		line 26 in file "game.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  val             2    8[COMRAM] int 
  2785 ;;  base            2   10[COMRAM] int 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  i               2   13[COMRAM] int 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  2    8[COMRAM] PTR unsigned char 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2797 ;;      Params:         4       0       0       0       0       0       0
  2798 ;;      Locals:         2       0       0       0       0       0       0
  2799 ;;      Temps:          1       0       0       0       0       0       0
  2800 ;;      Totals:         7       0       0       0       0       0       0
  2801 ;;Total ram usage:        7 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; Hardware stack levels required when called: 1
  2804 ;; This function calls:
  2805 ;;		i2___awdiv
  2806 ;;		i2___awmod
  2807 ;; This function is called by:
  2808 ;;		_H_ISR
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text18
  2813   000C26                     __ptext18:
  2814                           	callstack 0
  2815   000C26                     i2_itoa:
  2816                           	callstack 23
  2817   000C26                     
  2818                           ;game.c: 28:         };game.c: 30:             CCPR1L = 0x3d;
  2819   000C26  0E00               	movlw	0
  2820   000C28  6E0F               	movwf	(i2itoa@i+1)^0,c
  2821   000C2A  0E1E               	movlw	30
  2822   000C2C  6E0E               	movwf	i2itoa@i^0,c
  2823                           
  2824                           ;game.c: 32:         }
  2825   000C2E  EF42  F006         	goto	i2l1628
  2826   000C32                     i2l1622:
  2827                           
  2828                           ;game.c: 34:     if(number==1){
  2829   000C32  C009  F001         	movff	i2itoa@val,i2___awmod@dividend
  2830   000C36  C00A  F002         	movff	i2itoa@val+1,i2___awmod@dividend+1
  2831   000C3A  C00B  F003         	movff	i2itoa@base,i2___awmod@divisor
  2832   000C3E  C00C  F004         	movff	i2itoa@base+1,i2___awmod@divisor+1
  2833   000C42  EC77  F005         	call	i2___awmod	;wreg free
  2834   000C46  5001               	movf	?i2___awmod^0,w,c
  2835   000C48  0F01               	addlw	low STR_1
  2836   000C4A  6E0D               	movwf	??i2_itoa^0,c
  2837   000C4C  C00D  FFF6         	movff	??i2_itoa,tblptrl
  2838   000C50                     	if	1	;There is more than 1 active tblptr byte
  2839   000C50  0E06               	movlw	high __smallconst
  2840   000C52  6EF7               	movwf	tblptrh,c
  2841   000C54                     	endif
  2842   000C54                     	if	0	;tblptru may be non-zero
  2843   000C54                     	endif
  2844   000C54                     	if	0	;tblptru may be non-zero
  2845   000C54                     	endif
  2846   000C54  500E               	movf	i2itoa@i^0,w,c
  2847   000C56  0F80               	addlw	low itoa@buf
  2848   000C58  6ED9               	movwf	fsr2l,c
  2849   000C5A  6ADA               	clrf	fsr2h,c
  2850   000C5C  0008               	tblrd		*
  2851   000C5E  CFF5 FFDF          	movff	tablat,indf2
  2852   000C62  060E               	decf	i2itoa@i^0,f,c
  2853   000C64  A0D8               	btfss	status,0,c
  2854   000C66  060F               	decf	(i2itoa@i+1)^0,f,c
  2855   000C68  C009  F001         	movff	i2itoa@val,i2___awdiv@dividend
  2856   000C6C  C00A  F002         	movff	i2itoa@val+1,i2___awdiv@dividend+1
  2857   000C70  C00B  F003         	movff	i2itoa@base,i2___awdiv@divisor
  2858   000C74  C00C  F004         	movff	i2itoa@base+1,i2___awdiv@divisor+1
  2859   000C78  ECBD  F004         	call	i2___awdiv	;wreg free
  2860   000C7C  C001  F009         	movff	?i2___awdiv,i2itoa@val
  2861   000C80  C002  F00A         	movff	?i2___awdiv+1,i2itoa@val+1
  2862   000C84                     i2l1628:
  2863   000C84  5009               	movf	i2itoa@val^0,w,c
  2864   000C86  100A               	iorwf	(i2itoa@val+1)^0,w,c
  2865   000C88  B4D8               	btfsc	status,2,c
  2866   000C8A  EF49  F006         	goto	i2u112_41
  2867   000C8E  EF4B  F006         	goto	i2u112_40
  2868   000C92                     i2u112_41:
  2869   000C92  EF54  F006         	goto	i2l1632
  2870   000C96                     i2u112_40:
  2871   000C96  500E               	movf	i2itoa@i^0,w,c
  2872   000C98  100F               	iorwf	(i2itoa@i+1)^0,w,c
  2873   000C9A  A4D8               	btfss	status,2,c
  2874   000C9C  EF52  F006         	goto	i2u113_41
  2875   000CA0  EF54  F006         	goto	i2u113_40
  2876   000CA4                     i2u113_41:
  2877   000CA4  EF19  F006         	goto	i2l1622
  2878   000CA8                     i2u113_40:
  2879   000CA8                     i2l1632:
  2880                           
  2881                           ;game.c: 36:             CCPR2L = 0x78;
  2882   000CA8  500E               	movf	i2itoa@i^0,w,c
  2883   000CAA  0F81               	addlw	low (itoa@buf+1)
  2884   000CAC  0012               	return		;funcret
  2885   000CAE                     __end_ofi2_itoa:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function i2___awmod *****************
  2889 ;; Defined at:
  2890 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  dividend        2    0[COMRAM] int 
  2893 ;;  divisor         2    2[COMRAM] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  sign            1    5[COMRAM] unsigned char 
  2896 ;;  counter         1    4[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2    0[COMRAM] int 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2906 ;;      Params:         4       0       0       0       0       0       0
  2907 ;;      Locals:         2       0       0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0
  2909 ;;      Totals:         6       0       0       0       0       0       0
  2910 ;;Total ram usage:        6 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		i2_itoa
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text19
  2920   000AEE                     __ptext19:
  2921                           	callstack 0
  2922   000AEE                     i2___awmod:
  2923                           	callstack 23
  2924   000AEE  0E00               	movlw	0
  2925   000AF0  6E06               	movwf	i2___awmod@sign^0,c
  2926   000AF2  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  2927   000AF4  EF80  F005         	goto	i2u95_40
  2928   000AF8  EF7E  F005         	goto	i2u95_41
  2929   000AFC                     i2u95_41:
  2930   000AFC  EF86  F005         	goto	i2l1520
  2931   000B00                     i2u95_40:
  2932   000B00  6C01               	negf	i2___awmod@dividend^0,c
  2933   000B02  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  2934   000B04  B0D8               	btfsc	status,0,c
  2935   000B06  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  2936   000B08  0E01               	movlw	1
  2937   000B0A  6E06               	movwf	i2___awmod@sign^0,c
  2938   000B0C                     i2l1520:
  2939   000B0C  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  2940   000B0E  EF8D  F005         	goto	i2u96_40
  2941   000B12  EF8B  F005         	goto	i2u96_41
  2942   000B16                     i2u96_41:
  2943   000B16  EF91  F005         	goto	i2l1524
  2944   000B1A                     i2u96_40:
  2945   000B1A  6C03               	negf	i2___awmod@divisor^0,c
  2946   000B1C  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  2947   000B1E  B0D8               	btfsc	status,0,c
  2948   000B20  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  2949   000B22                     i2l1524:
  2950   000B22  5003               	movf	i2___awmod@divisor^0,w,c
  2951   000B24  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  2952   000B26  B4D8               	btfsc	status,2,c
  2953   000B28  EF98  F005         	goto	i2u97_41
  2954   000B2C  EF9A  F005         	goto	i2u97_40
  2955   000B30                     i2u97_41:
  2956   000B30  EFBE  F005         	goto	i2l1540
  2957   000B34                     i2u97_40:
  2958   000B34  0E01               	movlw	1
  2959   000B36  6E05               	movwf	i2___awmod@counter^0,c
  2960   000B38  EFA2  F005         	goto	i2l1530
  2961   000B3C                     i2l1528:
  2962   000B3C  90D8               	bcf	status,0,c
  2963   000B3E  3603               	rlcf	i2___awmod@divisor^0,f,c
  2964   000B40  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  2965   000B42  2A05               	incf	i2___awmod@counter^0,f,c
  2966   000B44                     i2l1530:
  2967   000B44  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  2968   000B46  EFA7  F005         	goto	i2u98_41
  2969   000B4A  EFA9  F005         	goto	i2u98_40
  2970   000B4E                     i2u98_41:
  2971   000B4E  EF9E  F005         	goto	i2l1528
  2972   000B52                     i2u98_40:
  2973   000B52                     i2l1532:
  2974   000B52  5003               	movf	i2___awmod@divisor^0,w,c
  2975   000B54  5C01               	subwf	i2___awmod@dividend^0,w,c
  2976   000B56  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  2977   000B58  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  2978   000B5A  A0D8               	btfss	status,0,c
  2979   000B5C  EFB2  F005         	goto	i2u99_41
  2980   000B60  EFB4  F005         	goto	i2u99_40
  2981   000B64                     i2u99_41:
  2982   000B64  EFB8  F005         	goto	i2l1536
  2983   000B68                     i2u99_40:
  2984   000B68  5003               	movf	i2___awmod@divisor^0,w,c
  2985   000B6A  5E01               	subwf	i2___awmod@dividend^0,f,c
  2986   000B6C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  2987   000B6E  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  2988   000B70                     i2l1536:
  2989   000B70  90D8               	bcf	status,0,c
  2990   000B72  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  2991   000B74  3203               	rrcf	i2___awmod@divisor^0,f,c
  2992   000B76  2E05               	decfsz	i2___awmod@counter^0,f,c
  2993   000B78  EFA9  F005         	goto	i2l1532
  2994   000B7C                     i2l1540:
  2995   000B7C  5006               	movf	i2___awmod@sign^0,w,c
  2996   000B7E  B4D8               	btfsc	status,2,c
  2997   000B80  EFC4  F005         	goto	i2u100_41
  2998   000B84  EFC6  F005         	goto	i2u100_40
  2999   000B88                     i2u100_41:
  3000   000B88  EFCA  F005         	goto	i2l1544
  3001   000B8C                     i2u100_40:
  3002   000B8C  6C01               	negf	i2___awmod@dividend^0,c
  3003   000B8E  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3004   000B90  B0D8               	btfsc	status,0,c
  3005   000B92  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3006   000B94                     i2l1544:
  3007   000B94  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3008   000B98  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3009   000B9C  0012               	return		;funcret
  3010   000B9E                     __end_ofi2___awmod:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function i2___awdiv *****************
  3014 ;; Defined at:
  3015 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  dividend        2    0[COMRAM] int 
  3018 ;;  divisor         2    2[COMRAM] int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  quotient        2    6[COMRAM] int 
  3021 ;;  sign            1    5[COMRAM] unsigned char 
  3022 ;;  counter         1    4[COMRAM] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2    0[COMRAM] int 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3032 ;;      Params:         4       0       0       0       0       0       0
  3033 ;;      Locals:         4       0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0
  3035 ;;      Totals:         8       0       0       0       0       0       0
  3036 ;;Total ram usage:        8 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		i2_itoa
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text20
  3046   00097A                     __ptext20:
  3047                           	callstack 0
  3048   00097A                     i2___awdiv:
  3049                           	callstack 23
  3050   00097A  0E00               	movlw	0
  3051   00097C  6E06               	movwf	i2___awdiv@sign^0,c
  3052   00097E  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  3053   000980  EFC6  F004         	goto	i2u89_40
  3054   000984  EFC4  F004         	goto	i2u89_41
  3055   000988                     i2u89_41:
  3056   000988  EFCC  F004         	goto	i2l1476
  3057   00098C                     i2u89_40:
  3058   00098C  6C03               	negf	i2___awdiv@divisor^0,c
  3059   00098E  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  3060   000990  B0D8               	btfsc	status,0,c
  3061   000992  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  3062   000994  0E01               	movlw	1
  3063   000996  6E06               	movwf	i2___awdiv@sign^0,c
  3064   000998                     i2l1476:
  3065   000998  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  3066   00099A  EFD3  F004         	goto	i2u90_40
  3067   00099E  EFD1  F004         	goto	i2u90_41
  3068   0009A2                     i2u90_41:
  3069   0009A2  EFD9  F004         	goto	i2l1482
  3070   0009A6                     i2u90_40:
  3071   0009A6  6C01               	negf	i2___awdiv@dividend^0,c
  3072   0009A8  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  3073   0009AA  B0D8               	btfsc	status,0,c
  3074   0009AC  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  3075   0009AE  0E01               	movlw	1
  3076   0009B0  1A06               	xorwf	i2___awdiv@sign^0,f,c
  3077   0009B2                     i2l1482:
  3078   0009B2  0E00               	movlw	0
  3079   0009B4  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  3080   0009B6  0E00               	movlw	0
  3081   0009B8  6E07               	movwf	i2___awdiv@quotient^0,c
  3082   0009BA  5003               	movf	i2___awdiv@divisor^0,w,c
  3083   0009BC  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  3084   0009BE  B4D8               	btfsc	status,2,c
  3085   0009C0  EFE4  F004         	goto	i2u91_41
  3086   0009C4  EFE6  F004         	goto	i2u91_40
  3087   0009C8                     i2u91_41:
  3088   0009C8  EF0E  F005         	goto	i2l1504
  3089   0009CC                     i2u91_40:
  3090   0009CC  0E01               	movlw	1
  3091   0009CE  6E05               	movwf	i2___awdiv@counter^0,c
  3092   0009D0  EFEE  F004         	goto	i2l1490
  3093   0009D4                     i2l1488:
  3094   0009D4  90D8               	bcf	status,0,c
  3095   0009D6  3603               	rlcf	i2___awdiv@divisor^0,f,c
  3096   0009D8  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  3097   0009DA  2A05               	incf	i2___awdiv@counter^0,f,c
  3098   0009DC                     i2l1490:
  3099   0009DC  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  3100   0009DE  EFF3  F004         	goto	i2u92_41
  3101   0009E2  EFF5  F004         	goto	i2u92_40
  3102   0009E6                     i2u92_41:
  3103   0009E6  EFEA  F004         	goto	i2l1488
  3104   0009EA                     i2u92_40:
  3105   0009EA                     i2l1492:
  3106   0009EA  90D8               	bcf	status,0,c
  3107   0009EC  3607               	rlcf	i2___awdiv@quotient^0,f,c
  3108   0009EE  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  3109   0009F0  5003               	movf	i2___awdiv@divisor^0,w,c
  3110   0009F2  5C01               	subwf	i2___awdiv@dividend^0,w,c
  3111   0009F4  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3112   0009F6  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  3113   0009F8  A0D8               	btfss	status,0,c
  3114   0009FA  EF01  F005         	goto	i2u93_41
  3115   0009FE  EF03  F005         	goto	i2u93_40
  3116   000A02                     i2u93_41:
  3117   000A02  EF08  F005         	goto	i2l1500
  3118   000A06                     i2u93_40:
  3119   000A06  5003               	movf	i2___awdiv@divisor^0,w,c
  3120   000A08  5E01               	subwf	i2___awdiv@dividend^0,f,c
  3121   000A0A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3122   000A0C  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  3123   000A0E  8007               	bsf	i2___awdiv@quotient^0,0,c
  3124   000A10                     i2l1500:
  3125   000A10  90D8               	bcf	status,0,c
  3126   000A12  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  3127   000A14  3203               	rrcf	i2___awdiv@divisor^0,f,c
  3128   000A16  2E05               	decfsz	i2___awdiv@counter^0,f,c
  3129   000A18  EFF5  F004         	goto	i2l1492
  3130   000A1C                     i2l1504:
  3131   000A1C  5006               	movf	i2___awdiv@sign^0,w,c
  3132   000A1E  B4D8               	btfsc	status,2,c
  3133   000A20  EF14  F005         	goto	i2u94_41
  3134   000A24  EF16  F005         	goto	i2u94_40
  3135   000A28                     i2u94_41:
  3136   000A28  EF1A  F005         	goto	i2l1508
  3137   000A2C                     i2u94_40:
  3138   000A2C  6C07               	negf	i2___awdiv@quotient^0,c
  3139   000A2E  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  3140   000A30  B0D8               	btfsc	status,0,c
  3141   000A32  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  3142   000A34                     i2l1508:
  3143   000A34  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  3144   000A38  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3145   000A3C  0012               	return		;funcret
  3146   000A3E                     __end_ofi2___awdiv:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function i2_UART_Write_Text *****************
  3150 ;; Defined at:
  3151 ;;		line 27 in file "uart.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  text            2   15[COMRAM] PTR unsigned char 
  3154 ;;		 -> STR_4(9), STR_3(9), STR_2(9), itoa@buf(32), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  i               2   19[COMRAM] int 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         2       0       0       0       0       0       0
  3167 ;;      Locals:         2       0       0       0       0       0       0
  3168 ;;      Temps:          2       0       0       0       0       0       0
  3169 ;;      Totals:         6       0       0       0       0       0       0
  3170 ;;Total ram usage:        6 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 1
  3173 ;; This function calls:
  3174 ;;		i2_UART_Write
  3175 ;; This function is called by:
  3176 ;;		_H_ISR
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text21
  3181   000DB0                     __ptext21:
  3182                           	callstack 0
  3183   000DB0                     i2_UART_Write_Text:
  3184                           	callstack 23
  3185   000DB0                     
  3186                           ;uart.c: 28:     for(int i=0;text[i]!='\0';i++)
  3187   000DB0  0E00               	movlw	0
  3188   000DB2  6E15               	movwf	(i2UART_Write_Text@i+1)^0,c
  3189   000DB4  0E00               	movlw	0
  3190   000DB6  6E14               	movwf	i2UART_Write_Text@i^0,c
  3191   000DB8  EFF8  F006         	goto	i2l1686
  3192   000DBC                     i2l1682:
  3193                           
  3194                           ;uart.c: 29:         UART_Write(text[i]);
  3195   000DBC  5014               	movf	i2UART_Write_Text@i^0,w,c
  3196   000DBE  2410               	addwf	i2UART_Write_Text@text^0,w,c
  3197   000DC0  6E12               	movwf	??i2_UART_Write_Text^0,c
  3198   000DC2  5015               	movf	(i2UART_Write_Text@i+1)^0,w,c
  3199   000DC4  2011               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  3200   000DC6  6E13               	movwf	(??i2_UART_Write_Text+1)^0,c
  3201   000DC8  C012  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  3202   000DCC  C013  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  3203   000DD0  6AF8               	clrf	tblptru,c
  3204   000DD2  0E05               	movlw	(high __ramtop+-1)
  3205   000DD4  64F7               	cpfsgt	tblptrh,c
  3206   000DD6  D003               	bra	i2u125_47
  3207   000DD8  0008               	tblrd		*
  3208   000DDA  50F5               	movf	tablat,w,c
  3209   000DDC  D005               	bra	i2u125_40
  3210   000DDE                     i2u125_47:
  3211   000DDE  CFF6 FFD9          	movff	tblptrl,fsr2l
  3212   000DE2  CFF7 FFDA          	movff	tblptrh,fsr2h
  3213   000DE6  50DF               	movf	indf2,w,c
  3214   000DE8                     i2u125_40:
  3215   000DE8  ECA9  F008         	call	i2_UART_Write
  3216   000DEC  4A14               	infsnz	i2UART_Write_Text@i^0,f,c
  3217   000DEE  2A15               	incf	(i2UART_Write_Text@i+1)^0,f,c
  3218   000DF0                     i2l1686:
  3219   000DF0  5014               	movf	i2UART_Write_Text@i^0,w,c
  3220   000DF2  2410               	addwf	i2UART_Write_Text@text^0,w,c
  3221   000DF4  6E12               	movwf	??i2_UART_Write_Text^0,c
  3222   000DF6  5015               	movf	(i2UART_Write_Text@i+1)^0,w,c
  3223   000DF8  2011               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  3224   000DFA  6E13               	movwf	(??i2_UART_Write_Text+1)^0,c
  3225   000DFC  C012  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  3226   000E00  C013  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  3227   000E04  6AF8               	clrf	tblptru,c
  3228   000E06  0E05               	movlw	(high __ramtop+-1)
  3229   000E08  64F7               	cpfsgt	tblptrh,c
  3230   000E0A  D003               	bra	i2u126_47
  3231   000E0C  0008               	tblrd		*
  3232   000E0E  50F5               	movf	tablat,w,c
  3233   000E10  D005               	bra	i2u126_40
  3234   000E12                     i2u126_47:
  3235   000E12  CFF6 FFD9          	movff	tblptrl,fsr2l
  3236   000E16  CFF7 FFDA          	movff	tblptrh,fsr2h
  3237   000E1A  50DF               	movf	indf2,w,c
  3238   000E1C                     i2u126_40:
  3239   000E1C  0900               	iorlw	0
  3240   000E1E  A4D8               	btfss	status,2,c
  3241   000E20  EF14  F007         	goto	i2u127_41
  3242   000E24  EF16  F007         	goto	i2u127_40
  3243   000E28                     i2u127_41:
  3244   000E28  EFDE  F006         	goto	i2l1682
  3245   000E2C                     i2u127_40:
  3246   000E2C  0012               	return		;funcret
  3247   000E2E                     __end_ofi2_UART_Write_Text:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function i2_UART_Write *****************
  3251 ;; Defined at:
  3252 ;;		line 20 in file "uart.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  data            1    wreg     unsigned char 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  data            1    0[COMRAM] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3266 ;;      Params:         0       0       0       0       0       0       0
  3267 ;;      Locals:         1       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0
  3269 ;;      Totals:         1       0       0       0       0       0       0
  3270 ;;Total ram usage:        1 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_H_ISR
  3276 ;;		i2_UART_Write_Text
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text22
  3281   001152                     __ptext22:
  3282                           	callstack 0
  3283   001152                     i2_UART_Write:
  3284                           	callstack 23
  3285                           
  3286                           ;incstack = 0
  3287                           ;i2UART_Write@data stored from wreg
  3288   001152  6E01               	movwf	i2UART_Write@data^0,c
  3289   001154                     i2l151:
  3290   001154  A2AC               	btfss	172,1,c	;volatile
  3291   001156  EFAF  F008         	goto	i2u88_41
  3292   00115A  EFB1  F008         	goto	i2u88_40
  3293   00115E                     i2u88_41:
  3294   00115E  EFAA  F008         	goto	i2l151
  3295   001162                     i2u88_40:
  3296   001162                     
  3297                           ;uart.c: 23:     TXREG = data;
  3298   001162  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  3299   001166  0012               	return		;funcret
  3300   001168                     __end_ofi2_UART_Write:
  3301                           	callstack 0
  3302                           
  3303                           	psect	rparam
  3304   000000                     
  3305                           	psect	temp
  3306   00005C                     btemp:
  3307                           	callstack 0
  3308   00005C                     	ds	1
  3309   000000                     int$flags	set	btemp
  3310   000000                     wtemp8	set	btemp+1
  3311   000000                     ttemp5	set	btemp+1
  3312   000000                     ttemp6	set	btemp+4
  3313   000000                     ttemp7	set	btemp+8
  3314                           
  3315                           	psect	idloc
  3316                           
  3317                           ;Config register IDLOC0 @ 0x200000
  3318                           ;	unspecified, using default values
  3319   200000                     	org	2097152
  3320   200000  FF                 	db	255
  3321                           
  3322                           ;Config register IDLOC1 @ 0x200001
  3323                           ;	unspecified, using default values
  3324   200001                     	org	2097153
  3325   200001  FF                 	db	255
  3326                           
  3327                           ;Config register IDLOC2 @ 0x200002
  3328                           ;	unspecified, using default values
  3329   200002                     	org	2097154
  3330   200002  FF                 	db	255
  3331                           
  3332                           ;Config register IDLOC3 @ 0x200003
  3333                           ;	unspecified, using default values
  3334   200003                     	org	2097155
  3335   200003  FF                 	db	255
  3336                           
  3337                           ;Config register IDLOC4 @ 0x200004
  3338                           ;	unspecified, using default values
  3339   200004                     	org	2097156
  3340   200004  FF                 	db	255
  3341                           
  3342                           ;Config register IDLOC5 @ 0x200005
  3343                           ;	unspecified, using default values
  3344   200005                     	org	2097157
  3345   200005  FF                 	db	255
  3346                           
  3347                           ;Config register IDLOC6 @ 0x200006
  3348                           ;	unspecified, using default values
  3349   200006                     	org	2097158
  3350   200006  FF                 	db	255
  3351                           
  3352                           ;Config register IDLOC7 @ 0x200007
  3353                           ;	unspecified, using default values
  3354   200007                     	org	2097159
  3355   200007  FF                 	db	255
  3356                           
  3357                           	psect	config
  3358                           
  3359                           ; Padding undefined space
  3360   300000                     	org	3145728
  3361   300000  FF                 	db	255
  3362                           
  3363                           ;Config register CONFIG1H @ 0x300001
  3364                           ;	Oscillator Selection bits
  3365                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3366                           ;	Fail-Safe Clock Monitor Enable bit
  3367                           ;	FCMEN = 0x0, unprogrammed default
  3368                           ;	Internal/External Oscillator Switchover bit
  3369                           ;	IESO = 0x0, unprogrammed default
  3370   300001                     	org	3145729
  3371   300001  08                 	db	8
  3372                           
  3373                           ;Config register CONFIG2L @ 0x300002
  3374                           ;	Power-up Timer Enable bit
  3375                           ;	PWRT = OFF, PWRT disabled
  3376                           ;	Brown-out Reset Enable bits
  3377                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  3378                           ;	Brown Out Reset Voltage bits
  3379                           ;	BORV = 0x3, unprogrammed default
  3380   300002                     	org	3145730
  3381   300002  1B                 	db	27
  3382                           
  3383                           ;Config register CONFIG2H @ 0x300003
  3384                           ;	Watchdog Timer Enable bit
  3385                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3386                           ;	Watchdog Timer Postscale Select bits
  3387                           ;	WDTPS = 0xF, unprogrammed default
  3388   300003                     	org	3145731
  3389   300003  1E                 	db	30
  3390                           
  3391                           ; Padding undefined space
  3392   300004                     	org	3145732
  3393   300004  FF                 	db	255
  3394                           
  3395                           ;Config register CONFIG3H @ 0x300005
  3396                           ;	CCP2 MUX bit
  3397                           ;	CCP2MX = 0x1, unprogrammed default
  3398                           ;	PORTB A/D Enable bit
  3399                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3400                           ;	Low-Power Timer1 Oscillator Enable bit
  3401                           ;	LPT1OSC = 0x0, unprogrammed default
  3402                           ;	MCLR Pin Enable bit
  3403                           ;	MCLRE = 0x1, unprogrammed default
  3404   300005                     	org	3145733
  3405   300005  81                 	db	129
  3406                           
  3407                           ;Config register CONFIG4L @ 0x300006
  3408                           ;	Stack Full/Underflow Reset Enable bit
  3409                           ;	STVREN = 0x1, unprogrammed default
  3410                           ;	Single-Supply ICSP Enable bit
  3411                           ;	LVP = OFF, Single-Supply ICSP disabled
  3412                           ;	Extended Instruction Set Enable bit
  3413                           ;	XINST = 0x0, unprogrammed default
  3414                           ;	Background Debugger Enable bit
  3415                           ;	DEBUG = 0x1, unprogrammed default
  3416   300006                     	org	3145734
  3417   300006  81                 	db	129
  3418                           
  3419                           ; Padding undefined space
  3420   300007                     	org	3145735
  3421   300007  FF                 	db	255
  3422                           
  3423                           ;Config register CONFIG5L @ 0x300008
  3424                           ;	unspecified, using default values
  3425                           ;	Code Protection bit
  3426                           ;	CP0 = 0x1, unprogrammed default
  3427                           ;	Code Protection bit
  3428                           ;	CP1 = 0x1, unprogrammed default
  3429                           ;	Code Protection bit
  3430                           ;	CP2 = 0x1, unprogrammed default
  3431                           ;	Code Protection bit
  3432                           ;	CP3 = 0x1, unprogrammed default
  3433   300008                     	org	3145736
  3434   300008  0F                 	db	15
  3435                           
  3436                           ;Config register CONFIG5H @ 0x300009
  3437                           ;	Boot Block Code Protection bit
  3438                           ;	CPB = 0x1, unprogrammed default
  3439                           ;	Data EEPROM Code Protection bit
  3440                           ;	CPD = OFF, Data EEPROM not code-protected
  3441   300009                     	org	3145737
  3442   300009  C0                 	db	192
  3443                           
  3444                           ;Config register CONFIG6L @ 0x30000A
  3445                           ;	unspecified, using default values
  3446                           ;	Write Protection bit
  3447                           ;	WRT0 = 0x1, unprogrammed default
  3448                           ;	Write Protection bit
  3449                           ;	WRT1 = 0x1, unprogrammed default
  3450                           ;	Write Protection bit
  3451                           ;	WRT2 = 0x1, unprogrammed default
  3452                           ;	Write Protection bit
  3453                           ;	WRT3 = 0x1, unprogrammed default
  3454   30000A                     	org	3145738
  3455   30000A  0F                 	db	15
  3456                           
  3457                           ;Config register CONFIG6H @ 0x30000B
  3458                           ;	unspecified, using default values
  3459                           ;	Configuration Register Write Protection bit
  3460                           ;	WRTC = 0x1, unprogrammed default
  3461                           ;	Boot Block Write Protection bit
  3462                           ;	WRTB = 0x1, unprogrammed default
  3463                           ;	Data EEPROM Write Protection bit
  3464                           ;	WRTD = 0x1, unprogrammed default
  3465   30000B                     	org	3145739
  3466   30000B  E0                 	db	224
  3467                           
  3468                           ;Config register CONFIG7L @ 0x30000C
  3469                           ;	unspecified, using default values
  3470                           ;	Table Read Protection bit
  3471                           ;	EBTR0 = 0x1, unprogrammed default
  3472                           ;	Table Read Protection bit
  3473                           ;	EBTR1 = 0x1, unprogrammed default
  3474                           ;	Table Read Protection bit
  3475                           ;	EBTR2 = 0x1, unprogrammed default
  3476                           ;	Table Read Protection bit
  3477                           ;	EBTR3 = 0x1, unprogrammed default
  3478   30000C                     	org	3145740
  3479   30000C  0F                 	db	15
  3480                           
  3481                           ;Config register CONFIG7H @ 0x30000D
  3482                           ;	unspecified, using default values
  3483                           ;	Boot Block Table Read Protection bit
  3484                           ;	EBTRB = 0x1, unprogrammed default
  3485   30000D                     	org	3145741
  3486   30000D  40                 	db	64
  3487                           tosu	equ	0xFFF
  3488                           tosh	equ	0xFFE
  3489                           tosl	equ	0xFFD
  3490                           stkptr	equ	0xFFC
  3491                           pclatu	equ	0xFFB
  3492                           pclath	equ	0xFFA
  3493                           pcl	equ	0xFF9
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           indf0	equ	0xFEF
  3501                           postinc0	equ	0xFEE
  3502                           postdec0	equ	0xFED
  3503                           preinc0	equ	0xFEC
  3504                           plusw0	equ	0xFEB
  3505                           fsr0h	equ	0xFEA
  3506                           fsr0l	equ	0xFE9
  3507                           wreg	equ	0xFE8
  3508                           indf1	equ	0xFE7
  3509                           postinc1	equ	0xFE6
  3510                           postdec1	equ	0xFE5
  3511                           preinc1	equ	0xFE4
  3512                           plusw1	equ	0xFE3
  3513                           fsr1h	equ	0xFE2
  3514                           fsr1l	equ	0xFE1
  3515                           bsr	equ	0xFE0
  3516                           indf2	equ	0xFDF
  3517                           postinc2	equ	0xFDE
  3518                           postdec2	equ	0xFDD
  3519                           preinc2	equ	0xFDC
  3520                           plusw2	equ	0xFDB
  3521                           fsr2h	equ	0xFDA
  3522                           fsr2l	equ	0xFD9
  3523                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        4
    BSS         50
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     65      91
    BANK0           128     21      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__itoa	PTR unsigned char  size(1) Largest target is 32
		 -> itoa@buf(BANK0[32]), 

    time@t	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 32
		 -> itoa@buf(BANK0[32]), STR_2(CODE[9]), STR_3(CODE[9]), STR_4(CODE[9]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _L_ISR in COMRAM

    _L_ISR->i1_UART_Write_Text
    i1_UART_Write_Text->_itoa
    _rand->___lmul
    _itoa->___awmod
    ___awmod->_rand

Critical Paths under _H_ISR in COMRAM

    _H_ISR->i2_UART_Write_Text
    i2_itoa->i2___awdiv
    i2_UART_Write_Text->i2_itoa

Critical Paths under _main in BANK0

    _main->_srand
    _srand->_time
    _UART_Write_Text->_UART_Write

Critical Paths under _L_ISR in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _L_ISR in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _L_ISR in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _L_ISR in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _L_ISR in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _L_ISR in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1420
                                             19 BANK0      2     2      0
                    _UART_Initialize
                         _UART_Write
                    _UART_Write_Text
                        _motor_angle
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 4     0      4     120
                                             11 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _srand                                                4     2      2      98
                                             15 BANK0      4     2      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (1) _motor_angle                                          4     0      4     792
                                             11 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      6     4      2     388
                                             12 BANK0      6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                             11 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _L_ISR                                               11    11      0    2831
                                              0 BANK0     11    11      0
                            ___awmod
                               _itoa
                               _rand
                       i1_UART_Write
                  i1_UART_Write_Text
                      i1_motor_angle
 ---------------------------------------------------------------------------------
 (4) i1_motor_angle                                        4     0      4     192
                                             28 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) i1_UART_Write_Text                                    6     4      2     164
                                             59 COMRAM     6     4      2
                               _itoa (ARG)
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (5) i1_UART_Write                                         1     1      0      22
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _rand                                                 6     4      2     370
                                             40 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                             28 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 7     3      4    1483
                                             52 COMRAM     7     3      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                             46 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                             28 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _H_ISR                                                7     7      0    1309
                                             21 COMRAM     7     7      0
                       i2_UART_Write
                  i2_UART_Write_Text
                             i2_itoa
                      i2_motor_angle
 ---------------------------------------------------------------------------------
 (7) i2_motor_angle                                        4     0      4     192
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) i2_itoa                                               7     3      4     931
                                              8 COMRAM     7     3      4
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (8) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i2_UART_Write_Text                                    6     4      2     164
                                             15 COMRAM     6     4      2
                       i2_UART_Write
                             i2_itoa (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initialize
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _motor_angle
   _srand
     _time (ARG)
   _time

 _L_ISR (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _itoa
     ___awdiv
     ___awmod
   _rand
   i1_UART_Write
   i1_UART_Write_Text
     _itoa (ARG)
     i1_UART_Write (ARG)
   i1_motor_angle

 _H_ISR (ROOT)
   i2_UART_Write
   i2_UART_Write_Text
     i2_UART_Write
     i2_itoa (ARG)
       i2___awdiv
       i2___awmod
   i2_itoa
   i2_motor_angle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     15      35       4       41.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     41      5B       1       72.2%
BITBIGSFR_1lllh      C      0       0      27        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFRl           9      0       0      31        0.0%
BITBIGSFR_1llhl      8      0       0      25        0.0%
BITBIGSFR_1hhl       8      0       0      21        0.0%
BITBIGSFRhh          7      0       0      29        0.0%
BITBIGSFRhlh         6      0       0      30        0.0%
BITBIGSFR_1hhhl      4      0       0      20        0.0%
BITBIGSFR_2h         3      0       0      18        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFR_1hhhh      2      0       0      19        0.0%
BITBIGSFR_1hl        2      0       0      22        0.0%
BITBIGSFR_1llhh      1      0       0      24        0.0%
BITBIGSFR_1llhl      1      0       0      26        0.0%
BITBIGSFR_1lh        1      0       0      23        0.0%
BITBIGSFR_1llll      1      0       0      28        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      32        0.0%
DATA                 0      0      90      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 09 23:16:46 2024

                        _T 005A                         l95 0EA8               ___awdiv@sign 0022  
                       bsr 0FE0      __end_ofi1_motor_angle 0F24                        l151 1110  
                      l160 0D30                        l128 08AE                        l129 08AE  
                      l154 1122                        l148 113A                        l846 10EE  
                      l839 110A                        _PR2 0FCB                        u720 111E  
                      u721 111A                        _str 0042               ___awmod@sign 0034  
                      wreg 0FE8           motor_angle@state 00AD                       l1600 10E6  
                     l1610 1130                       l1612 1132                       l1604 10F0  
                     l1614 1134                       l1606 1124                       l1366 1110  
                     l1616 1136                       l1608 112C                       l1368 111E  
                     l1800 07DE                       l1618 1138                       l1570 0E64  
                     l1810 07F0                       l1802 07E2                       l1572 0E6C  
                     l1564 0E2E                       l1820 080C                       l1812 07F8  
                     l1804 07E6                       l1582 0CAE                       l1574 0E7E  
                     l1566 0E42                       l1830 081E                       l1822 0810  
                     l1814 0800                       l1806 07EA                       l1584 0CBC  
                     l1576 0E90                       l1568 0E54                       l1840 0828  
                     l1832 0820                       l1824 0814                       l1816 0804  
                     l1808 07EC                       l1586 0CEE                       l1578 0EA0  
                     l1850 0836                       l1842 082C                       l1834 0822  
                     l1826 0818                       l1818 0808                       l1588 0CF4  
                     l1596 10BA                       l1860 0842                       l1852 083A  
                     l1844 0830                       l1836 0824                       l1828 081C  
                     l1598 10CE                       l1870 084C                       l1862 0844  
                     l1854 083C                       l1846 0832                       l1838 0826  
                     l1880 0882                       l1872 084E                       l1864 0846  
                     l1856 083E                       l1848 0834                       l1792 07B8  
                     l1882 0898                       l1874 0850                       l1866 0848  
                     l1858 0840                       l1794 07D2                       l1876 0856  
                     l1868 084A                       l1796 07D6                       l1878 0868  
                     l1798 07DA                       STR_1 0601                       STR_2 0612  
                     STR_3 0612                       STR_4 0612                       u1030 0E42  
                     u1110 10CE                       u1031 0E3E                       u1111 10CA  
                     u1040 0E54                       u1041 0E50                       u1050 0E7E  
                     u1051 0E7A                       u1060 0E90                       u1061 0E8C  
                     u1070 0CEA                       u1080 0D20                       u1090 0D30  
                     u1091 0D2C                       u1077 0CE0                       _LATA 0F89  
                     _LATB 0F8A                       u1087 0D16                       _LATC 0F8B  
                     u1507 0874                       i1l86 0C24                       i1l95 0F22  
                     i2l86 0CAC                       i2l95 0F9C                       _main 07B8  
                     _rand 0F9E                       _itoa 0B9E                       _seed 0054  
                     _time 10BA                       fsr2h 0FDA                       indf2 0FDF  
                     fsr1l 0FE1                       fsr2l 0FD9                       btemp 005C  
                     start 0240               ___param_bank 0000          motor_angle@number 00AB  
  __end_of_UART_Write_Text 0D32           ?_UART_Initialize 0001      __end_ofi2_motor_angle 0F9E  
                    ?_main 0001                      ?_rand 0029                      ?_itoa 0035  
          __end_of___awdiv 097A            __end_of___awmod 0AEE                      ?_time 00AB  
                    _T0CON 0FD5            ___awdiv@divisor 001F                      i1l123 0218  
                    i1l151 113E                      i1l160 0DAE                      i1l154 1150  
                    i2l110 079C                      i2l102 0652                      i1l174 1062  
                    i1l407 0AEC                      i1l175 1072                      i2l107 06CA  
                    i2l151 1154                      i2l160 0E2C                      i2l154 1166  
                    i1l394 0978                      i2l407 0B9C                      i1l842 1008  
                    i2l394 0A3C            ___awdiv@counter 0021                      _H_ISR 0008  
                    _TMR0H 0FD7                      _TMR0L 0FD6                      _SPBRG 0FAF  
                    _L_ISR 0018                      _TRISC 0F94                      _TXREG 0FAD  
      ___lmul@multiplicand 0021                ?_UART_Write 0001                 i2itoa@base 000B  
                    _score 004C                      _srand 10F0                      itoa@i 003A  
                    tablat 0FF5                      time@t 00AB                      ttemp5 005D  
                    ttemp6 0060                      ttemp7 0064                      status 0FD8  
                    wtemp8 005D            __initialization 1074               __end_of_main 08B6  
             __end_of_rand 100A               __end_of_itoa 0C26               __end_of_time 10F0  
                   ??_main 00B3                     ??_rand 002B                     ??_itoa 0039  
                   ??_time 00AF              __activetblptr 0002                     ?_H_ISR 0001  
                   ?_L_ISR 0001         i1UART_Write_Text@i 0040                     _ADCON1 0FC1  
                   _CCPR1L 0FBE                     _CCPR2L 0FBB           ___awdiv@dividend 001D  
                   ?_srand 00AF                     i1l1400 0910                     i1l1410 094A  
                   i1l1402 0918                     i1l1420 0970                     i1l1412 094C  
                   i1l1404 0926                     i1l1414 0952                     i1l1406 092C  
                   i1l1430 0A58                     i1l1408 0942                     i1l1416 0958  
                   i1l1440 0A8C                     i1l1432 0A5C                     i1l1424 0A3E  
                   i1l1418 0968                     i1l1450 0AC6                     i1l1442 0A94  
                   i1l1434 0A6A                     i1l1426 0A42                     i1l1370 100A  
                   i1l1380 08B6                     i1l1444 0AA2                     i1l1452 0ACC  
                   i1l1436 0A72                     i1l1428 0A50                     i1l1372 101A  
                   i1l1460 113E                     i1l1390 08E2                     i1l1382 08BA  
                   i1l1454 0ADC                     i1l1446 0AB8                     i1l1438 0A84  
                   i1l1550 0BAA                     i1l1374 1028                     i1l1462 114C  
                   i1l1392 08EA                     i1l1384 08C8                     i1l1456 0AE4  
                   i1l1448 0AC0                     i1l1560 0C20                     i1l1552 0BDA  
                   i1l1376 1038                     i1l1640 0ECE                     i1l1394 08EE  
                   i1l1386 08D0                     i1l1554 0BE0                     i1l1378 1042  
                   i1l1650 0F1A                     i1l1642 0EDE                     i1l1396 08F6  
                   i1l1388 08D4                     i1l1556 0BFC                     i1l1548 0B9E  
                   i1l1644 0EE6                     i1l1636 0EAA                     i1l1900 00D6  
                   i1l1398 0908                     i1l1558 0C0E                     i1l1590 0F9E  
                   i1l1646 0EF8                     i1l1638 0EBC                     i1l1910 0164  
                   i1l1902 00F4                     i1l1592 0FDA                     i1l1672 0D32  
                   i1l1648 0F0A                     i1l1920 01D6                     i1l1912 0178  
                   i1l1904 0110                     i1l1674 0D3E                     i1l1930 0216  
                   i1l1922 01F2                     i1l1914 0180                     i1l1906 012C  
                   i1l1676 0D6E                     i1l1924 020C                     i1l1916 019C  
                   i1l1908 014A                     i1l1678 0D72                     i1l1926 020E  
                   i1l1918 01B8                     i1l1928 0212                     i1l1890 0054  
                   i2l1500 0A10                     i1l1892 0064                     i1l1884 003E  
                   i2l1502 0A16                     i1l1894 0086                     i1l1886 004C  
                   i2l1504 0A1C                     i2l1520 0B0C                     i2l1512 0AEE  
                   i1l1896 00A6                     i1l1888 004E                     i2l1506 0A2C  
                   i2l1530 0B44                     i2l1522 0B1A                     i2l1514 0AF2  
                   i1l1898 00BA                     i2l1508 0A34                     i2l1532 0B52  
                   i2l1540 0B7C                     i2l1524 0B22                     i2l1516 0B00  
                   i2l1620 0C26                     i2l1700 067A                     i2l1470 097E  
                   i2l1542 0B8C                     i2l1534 0B68                     i2l1526 0B34  
                   i2l1518 0B08                     i2l1630 0C96                     i2l1622 0C32  
                   i2l1710 06CC                     i2l1702 0682                     i2l1464 1154  
                   i2l1480 09AE                     i2l1472 098C                     i2l1544 0B94  
                   i2l1536 0B70                     i2l1528 0B3C                     i2l1632 0CA8  
                   i2l1624 0C62                     i2l1720 0716                     i2l1712 06DC  
                   i2l1704 0694                     i2l1466 1162                     i2l1490 09DC  
                   i2l1482 09B2                     i2l1474 0994                     i2l1538 0B76  
                   i2l1626 0C68                     i2l1730 0774                     i2l1722 071C  
                   i2l1714 06EE                     i2l1706 06A6                     i2l1492 09EA  
                   i2l1484 09BA                     i2l1476 0998                     i2l1468 097A  
                   i2l1628 0C84                     i2l1660 0F58                     i2l1740 0794  
                   i2l1732 0784                     i2l1724 072C                     i2l1716 0700  
                   i2l1708 06B8                     i2l1494 09F0                     i2l1486 09CC  
                   i2l1478 09A6                     i2l1662 0F60                     i2l1654 0F24  
                   i2l1734 0786                     i2l1718 0712                     i2l1726 074C  
                   i2l1680 0DB0                     i2l1496 0A06                     i2l1488 09D4  
                   i2l1664 0F72                     i2l1656 0F36                     i2l1736 0788  
                   i2l1728 0760                     i2l1682 0DBC                     i2l1498 0A0E  
                   i2l1666 0F84                     i2l1658 0F48                     i2l1738 078C  
                   i2l1690 0644                     i2l1684 0DEC                     i2l1668 0F94  
                   i2l1692 0660                     i2l1686 0DF0                     i2l1694 0662  
                   i2l1696 066A                     i2l1688 0636                     i2l1698 0678  
                   _OSCCON 0FD3                     _TMR0IF 7F92                     i2_itoa 0C26  
                   ___lmul 100A                  ??___awdiv 0021                  ??___awmod 0033  
         ?_UART_Write_Text 00AC                     clear_0 109A                     clear_1 10A6  
         ___awdiv@quotient 0023            ___awmod@divisor 0031                     isa$std 0001  
             ?_motor_angle 00AB            ___awmod@counter 0033         i1motor_angle@state 001F  
           i2___awdiv@sign 0006               __pdataCOMRAM 0058          __end_ofi2___awdiv 0A3E  
        __end_ofi2___awmod 0B9E               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8                     srand@s 00AF  
           i2___awmod@sign 0006                 __accesstop 0080    __end_of__initialization 10AC  
            ___rparam_used 0001              __end_of_H_ISR 07B8              __end_of_L_ISR 0240  
            ?i1_UART_Write 0001             __pcstackCOMRAM 0001              __end_of_srand 110C  
                  ??_H_ISR 0016                    ??_L_ISR 00A0              ?i2_UART_Write 0001  
                  ??_srand 00B1                 __pbssBANK0 0080      i1UART_Write_Text@text 003C  
               __pnvCOMRAM 0054                    ?i2_itoa 0009           i2UART_Write@data 0001  
           ??i1_UART_Write 001D         i2UART_Write_Text@i 0014                    ?___lmul 001D  
           ___lmul@product 0025             ??i2_UART_Write 0001               ??_UART_Write 00AB  
                  i1u80_20 0968                    i1u80_21 0964                    i1u81_20 0A50  
                  i1u73_20 1028                    i1u81_21 0A4C                    i1u73_21 1024  
                  i1u82_20 0A6A                    i1u74_20 1062                    i1u82_21 0A66  
                  i1u74_21 105E                    i1u75_20 08C8                    i1u83_20 0A84  
                  i1u75_21 08C4                    i1u83_21 0A80                    i1u76_20 08E2  
                  i1u84_20 0AA2                    i1u76_21 08DE                    i1u84_21 0A9E  
                  i1u77_20 0908                    i1u85_20 0AB8                    i1u77_21 0904  
                  i1u85_21 0AB4                    i1u78_20 0926                    i1u86_20 0ADC  
                  i1u78_21 0922                    i1u86_21 0AD8                    i1u79_20 0942  
                  i1u87_20 114C                    i1u79_21 093E                    i1u87_21 1148  
                  i2u90_40 09A6                    i2u90_41 09A2                    i2u91_40 09CC  
                  i2u91_41 09C8                    i2u92_40 09EA                    i2u92_41 09E6  
                  i2u93_40 0A06                    i2u93_41 0A02                    i2u94_40 0A2C  
                  i2u94_41 0A28                    i2u95_40 0B00                    i2u95_41 0AFC  
                  i2u88_40 1162                    i2u96_40 0B1A                    i2u88_41 115E  
                  i2u96_41 0B16                    i2u89_40 098C                    i2u97_40 0B34  
                  i2u89_41 0988                    i2u97_41 0B30                    i2u98_40 0B52  
                  i2u98_41 0B4E                    i2u99_40 0B68                    i2u99_41 0B64  
       i2motor_angle@state 0003                    i2itoa@i 000E                    __Hparam 0000  
                  __Lparam 0000                    ___awdiv 08B6                    ___awmod 0A3E  
       __end_of_UART_Write 1124               __psmallconst 0600                    _check_0 0052  
                  _check_1 0050                    _check_2 004E                    __pcinit 1074  
                  __ramtop 0600                    __ptext0 07B8                    __ptext1 10BA  
                  __ptext2 10F0                    __ptext3 0E2E                    __ptext4 0CAE  
                  __ptext5 110C                    __ptext6 1124                    __ptext8 0EAA  
                  __ptext9 0D32                  _T0CONbits 0FD5                  _T2CONbits 0FCA  
         ___awmod@dividend 002F        i1motor_angle@number 001D             __pintcode_body 061C  
     end_of_initialization 10AC                    itoa@buf 0080                    itoa@val 0035  
            __Lmediumconst 0000                    int_func 061C                  _RCSTAbits 0FAB  
                  postdec1 0FE5                    postdec2 0FDD                    postinc0 0FEE  
                  postinc2 0FDE              i1_motor_angle 0EAA             UART_Write@data 00AB  
                _TRISAbits 0F92                  _TRISBbits 0F93                  _TRISCbits 0F94  
     __end_ofi1_UART_Write 1152                  i2___awdiv 097A                  i2___awmod 0AEE  
              _CCP1CONbits 0FBD                _CCP2CONbits 0FBA                  _TXSTAbits 0FAC  
       i2___awdiv@dividend 0001             __end_ofi2_itoa 0CAE       __end_ofi2_UART_Write 1168  
           __end_of___lmul 1074          i1_UART_Write_Text 0D32                _BAUDCONbits 0FB8  
            __pidataCOMRAM 1168             ?i1_motor_angle 001D                  i2itoa@val 0009  
       ?i1_UART_Write_Text 003C              i2_motor_angle 0F24        start_initialization 1074  
       i2___awdiv@quotient 0007        ??i1_UART_Write_Text 003E                 ?i2___awdiv 0001  
               ?i2___awmod 0001          ??_UART_Initialize 00AB                   ??i2_itoa 000D  
                 ??___lmul 0025  __end_ofi1_UART_Write_Text 0DB0             ?i2_motor_angle 0001  
              __pbssCOMRAM 0042          i2_UART_Write_Text 0DB0              __pcstackBANK0 00A0  
       ?i2_UART_Write_Text 0010      i2UART_Write_Text@text 0010        ??i2_UART_Write_Text 0012  
                __pintcode 0008                   ?___awdiv 001D                   ?___awmod 002F  
          ??i1_motor_angle 0021                __pintcodelo 0018  __end_ofi2_UART_Write_Text 0E2E  
              __smallconst 0600                ??i2___awdiv 0005                ??i2___awmod 0005  
        ??_UART_Write_Text 00AE                   _LATAbits 0F89                   i1u101_20 0C0E  
                 i1u101_21 0C0A                   i1u102_20 0C20                   i1u110_20 0FFA  
                 i1u102_21 0C1C                   i1u110_25 0FF0                   i1u122_20 0D6A  
                 i1u114_20 0EBC                   i1u114_21 0EB8                   i1u122_27 0D60  
                 i1u123_20 0D9E                   i1u115_20 0ECE                   i1u115_21 0ECA  
                 i1u123_27 0D94                   i1u124_20 0DAE                   i1u116_20 0EF8  
                 i1u124_21 0DAA                   i1u116_21 0EF4                   i1u117_20 0F0A  
                 i1u117_21 0F06                   i1u143_20 004C                   i1u143_21 0048  
                 i1u151_27 00E2                   i1u144_20 00D6                   i1u144_21 00D2  
                 i1u152_27 0138                   i1u145_20 0110                   i1u145_21 010C  
                 i1u153_27 0156                   i1u146_20 012C                   i1u146_21 0128  
                 i1u154_27 01C4                   i1u147_20 019C                   i1u147_21 0198  
                 i1u155_27 01FE                   i1u148_20 01B8                   i1u148_21 01B4  
                 i2u100_40 0B8C                   i2u100_41 0B88                   i1u149_20 01F2  
                 i1u149_21 01EE                   i2u112_40 0C96                   i2u120_40 0F72  
                 i2u112_41 0C92                   i2u120_41 0F6E                   i2u113_40 0CA8  
                 i2u121_40 0F84                   i2u113_41 0CA4                   i2u121_41 0F80  
                 i2u130_40 0660                   i2u130_41 065C                   i2u131_40 0678  
                 i2u131_41 0674                   i2u132_40 0694                   i2u132_41 0690  
                 i2u125_40 0DE8                   i2u133_40 06A6                   i2u133_41 06A2  
                 i2u125_47 0DDE                   i2u126_40 0E1C                   i2u118_40 0F36  
                 i2u134_40 06B8                   i2u118_41 0F32                   i2u134_41 06B4  
                 i2u126_47 0E12                   i2u127_40 0E2C                   i2u119_40 0F48  
                 i2u135_40 06CA                   i2u127_41 0E28                   i2u119_41 0F44  
                 i2u135_41 06C6                   i2u128_40 0644                   i2u128_41 0640  
                 i2u160_47 077A                   i2u129_40 0652                   i2u129_41 064E  
                 i2u156_47 06D2                   i2u157_47 06E4                   i2u158_47 06F6  
                 i2u159_47 0708                   _PIR1bits 0F9E               i1_UART_Write 113C  
                 _RCONbits 0FD0                  _motor_num 0058            ??i2_motor_angle 0005  
            ??_motor_angle 00AF          i2___awdiv@divisor 0003          i2___awdiv@counter 0005  
      i2motor_angle@number 0001               i2_UART_Write 1152          ___lmul@multiplier 001D  
              _INTCON2bits 0FF1                _INTCON3bits 0FF0                  copy_data0 1088  
       i2___awmod@dividend 0001           i1UART_Write@data 001D                   __Hrparam 0000  
                 __Lrparam 0000            _UART_Initialize 1124        __end_of_motor_angle 0EAA  
                 __ptext10 113C                   __ptext11 0F9E                   __ptext20 097A  
                 __ptext12 100A                   __ptext21 0DB0                   __ptext13 0B9E  
                 __ptext22 1152                   __ptext14 0A3E                   __ptext15 08B6  
                 __ptext17 0F24                   __ptext18 0C26                   __ptext19 0AEE  
      UART_Write_Text@text 00AC                   isa$xinst 0000                   int$flags 005C  
        i2___awmod@divisor 0003          i2___awmod@counter 0005                 _INTCONbits 0FF2  
                 itoa@base 0037                   intlevel1 0000                   intlevel2 0000  
  __end_of_UART_Initialize 113C                _motor_angle 0E2E            _UART_Write_Text 0CAE  
               _UART_Write 110C           UART_Write_Text@i 00B0  
